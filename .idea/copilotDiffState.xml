<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/app/src/main/AndroidManifest.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/AndroidManifest.xml" />
              <option name="originalContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;manifest xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    package=&quot;com.waterfountainmachine.app&quot;&gt;&#10;&#10;    &lt;!-- Kiosk mode permissions --&gt;&#10;    &lt;uses-permission android:name=&quot;android.permission.WAKE_LOCK&quot; /&gt;&#10;    &lt;uses-permission android:name=&quot;android.permission.DISABLE_KEYGUARD&quot; /&gt;&#10;    &lt;uses-permission android:name=&quot;android.permission.SYSTEM_ALERT_WINDOW&quot; /&gt;&#10;    &lt;uses-permission android:name=&quot;android.permission.WRITE_SECURE_SETTINGS&quot; /&gt;&#10;&#10;    &lt;!-- SMS permissions (for later implementation) --&gt;&#10;    &lt;uses-permission android:name=&quot;android.permission.SEND_SMS&quot; /&gt;&#10;    &lt;uses-permission android:name=&quot;android.permission.RECEIVE_SMS&quot; /&gt;&#10;&#10;    &lt;!-- Camera permission for QR code --&gt;&#10;    &lt;uses-permission android:name=&quot;android.permission.CAMERA&quot; /&gt;&#10;&#10;    &lt;application&#10;        android:allowBackup=&quot;false&quot;&#10;        android:icon=&quot;@mipmap/ic_launcher&quot;&#10;        android:label=&quot;@string/app_name&quot;&#10;        android:theme=&quot;@style/Theme.AppCompat.Light.NoActionBar&quot;&#10;        android:screenOrientation=&quot;portrait&quot;&gt;&#10;&#10;        &lt;!-- Main Activity with launcher intent and kiosk mode setup --&gt;&#10;        &lt;activity&#10;            android:name=&quot;.MainActivity&quot;&#10;            android:exported=&quot;true&quot;&#10;            android:launchMode=&quot;singleTask&quot;&#10;            android:screenOrientation=&quot;portrait&quot;&#10;            android:configChanges=&quot;orientation|screenSize|keyboardHidden&quot;&#10;            android:theme=&quot;@style/Theme.AppCompat.Light.NoActionBar&quot;&gt;&#10;&#10;            &lt;intent-filter android:priority=&quot;1000&quot;&gt;&#10;                &lt;action android:name=&quot;android.intent.action.MAIN&quot; /&gt;&#10;                &lt;category android:name=&quot;android.intent.category.LAUNCHER&quot; /&gt;&#10;                &lt;category android:name=&quot;android.intent.category.HOME&quot; /&gt;&#10;                &lt;category android:name=&quot;android.intent.category.DEFAULT&quot; /&gt;&#10;            &lt;/intent-filter&gt;&#10;        &lt;/activity&gt;&#10;&#10;        &lt;activity&#10;            android:name=&quot;.VendingActivity&quot;&#10;            android:screenOrientation=&quot;portrait&quot;&#10;            android:configChanges=&quot;orientation|screenSize|keyboardHidden&quot;&#10;            android:theme=&quot;@style/Theme.AppCompat.Light.NoActionBar&quot; /&gt;&#10;&#10;        &lt;activity&#10;            android:name=&quot;.SMSActivity&quot;&#10;            android:screenOrientation=&quot;portrait&quot;&#10;            android:configChanges=&quot;orientation|screenSize|keyboardHidden&quot;&#10;            android:theme=&quot;@style/Theme.AppCompat.Light.NoActionBar&quot; /&gt;&#10;&#10;        &lt;activity&#10;            android:name=&quot;.QRActivity&quot;&#10;            android:screenOrientation=&quot;portrait&quot;&#10;            android:configChanges=&quot;orientation|screenSize|keyboardHidden&quot;&#10;            android:theme=&quot;@style/Theme.AppCompat.Light.NoActionBar&quot; /&gt;&#10;&#10;        &lt;activity&#10;            android:name=&quot;.VendingAnimationActivity&quot;&#10;            android:screenOrientation=&quot;portrait&quot;&#10;            android:configChanges=&quot;orientation|screenSize|keyboardHidden&quot;&#10;            android:theme=&quot;@style/Theme.AppCompat.Light.NoActionBar&quot; /&gt;&#10;&#10;    &lt;/application&gt;&#10;&#10;&lt;/manifest&gt;" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;manifest xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    package=&quot;com.waterfountainmachine.app&quot;&gt;&#10;&#10;    &lt;!-- Kiosk mode permissions --&gt;&#10;    &lt;uses-permission android:name=&quot;android.permission.WAKE_LOCK&quot; /&gt;&#10;    &lt;uses-permission android:name=&quot;android.permission.DISABLE_KEYGUARD&quot; /&gt;&#10;    &lt;uses-permission android:name=&quot;android.permission.SYSTEM_ALERT_WINDOW&quot; /&gt;&#10;    &lt;uses-permission android:name=&quot;android.permission.WRITE_SECURE_SETTINGS&quot; /&gt;&#10;&#10;    &lt;!-- SMS permissions (for later implementation) --&gt;&#10;    &lt;uses-permission android:name=&quot;android.permission.SEND_SMS&quot; /&gt;&#10;    &lt;uses-permission android:name=&quot;android.permission.RECEIVE_SMS&quot; /&gt;&#10;&#10;    &lt;!-- Camera permission for QR code --&gt;&#10;    &lt;uses-permission android:name=&quot;android.permission.CAMERA&quot; /&gt;&#10;&#10;    &lt;application&#10;        android:allowBackup=&quot;false&quot;&#10;        android:icon=&quot;@mipmap/ic_launcher&quot;&#10;        android:label=&quot;@string/app_name&quot;&#10;        android:theme=&quot;@style/Theme.AppCompat.Light.NoActionBar&quot;&#10;        android:screenOrientation=&quot;portrait&quot;&gt;&#10;&#10;        &lt;!-- Main Activity with launcher intent and kiosk mode setup --&gt;&#10;        &lt;activity&#10;            android:name=&quot;.MainActivity&quot;&#10;            android:exported=&quot;true&quot;&#10;            android:launchMode=&quot;singleTask&quot;&#10;            android:screenOrientation=&quot;portrait&quot;&#10;            android:configChanges=&quot;orientation|screenSize|keyboardHidden&quot;&#10;            android:theme=&quot;@style/Theme.AppCompat.Light.NoActionBar&quot;&gt;&#10;&#10;            &lt;intent-filter android:priority=&quot;1000&quot;&gt;&#10;                &lt;action android:name=&quot;android.intent.action.MAIN&quot; /&gt;&#10;                &lt;category android:name=&quot;android.intent.category.LAUNCHER&quot; /&gt;&#10;                &lt;category android:name=&quot;android.intent.category.HOME&quot; /&gt;&#10;                &lt;category android:name=&quot;android.intent.category.DEFAULT&quot; /&gt;&#10;            &lt;/intent-filter&gt;&#10;        &lt;/activity&gt;&#10;&#10;        &lt;activity&#10;            android:name=&quot;.VendingActivity&quot;&#10;            android:screenOrientation=&quot;portrait&quot;&#10;            android:configChanges=&quot;orientation|screenSize|keyboardHidden&quot;&#10;            android:theme=&quot;@style/Theme.AppCompat.Light.NoActionBar&quot; /&gt;&#10;&#10;        &lt;activity&#10;            android:name=&quot;.PINActivity&quot;&#10;            android:screenOrientation=&quot;portrait&quot;&#10;            android:configChanges=&quot;orientation|screenSize|keyboardHidden&quot;&#10;            android:theme=&quot;@style/Theme.AppCompat.Light.NoActionBar&quot; /&gt;&#10;&#10;        &lt;activity&#10;            android:name=&quot;.SMSActivity&quot;&#10;            android:screenOrientation=&quot;portrait&quot;&#10;            android:configChanges=&quot;orientation|screenSize|keyboardHidden&quot;&#10;            android:theme=&quot;@style/Theme.AppCompat.Light.NoActionBar&quot; /&gt;&#10;&#10;        &lt;activity&#10;            android:name=&quot;.QRActivity&quot;&#10;            android:screenOrientation=&quot;portrait&quot;&#10;            android:configChanges=&quot;orientation|screenSize|keyboardHidden&quot;&#10;            android:theme=&quot;@style/Theme.AppCompat.Light.NoActionBar&quot; /&gt;&#10;&#10;        &lt;activity&#10;            android:name=&quot;.VendingAnimationActivity&quot;&#10;            android:screenOrientation=&quot;portrait&quot;&#10;            android:configChanges=&quot;orientation|screenSize|keyboardHidden&quot;&#10;            android:theme=&quot;@style/Theme.AppCompat.Light.NoActionBar&quot; /&gt;&#10;&#10;    &lt;/application&gt;&#10;&#10;&lt;/manifest&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/waterfountainmachine/app/MainActivity.kt">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/waterfountainmachine/app/MainActivity.kt" />
              <option name="originalContent" value="package com.waterfountainmachine.app&#10;&#10;import android.animation.ObjectAnimator&#10;import android.content.Intent&#10;import android.os.Bundle&#10;import android.view.KeyEvent&#10;import android.view.View&#10;import android.view.WindowManager&#10;import android.view.animation.AccelerateDecelerateInterpolator&#10;import androidx.appcompat.app.AppCompatActivity&#10;import androidx.core.view.WindowCompat&#10;import androidx.core.view.WindowInsetsCompat&#10;import androidx.core.view.WindowInsetsControllerCompat&#10;import com.waterfountainmachine.app.databinding.ActivityMainBinding&#10;&#10;class MainActivity : AppCompatActivity() {&#10;    private lateinit var binding: ActivityMainBinding&#10;&#10;    override fun onCreate(savedInstanceState: Bundle?) {&#10;        super.onCreate(savedInstanceState)&#10;        binding = ActivityMainBinding.inflate(layoutInflater)&#10;        setContentView(binding.root)&#10;&#10;        setupKioskMode()&#10;        setupFullScreen()&#10;        setupClickListener()&#10;        setupQuestionMarkAnimation()&#10;        setupModalFunctionality()&#10;    }&#10;&#10;    private fun setupKioskMode() {&#10;        // Keep screen on&#10;        window.addFlags(WindowManager.LayoutParams.FLAG_KEEP_SCREEN_ON)&#10;&#10;        // Prevent task switching&#10;        window.addFlags(WindowManager.LayoutParams.FLAG_DISMISS_KEYGUARD)&#10;        window.addFlags(WindowManager.LayoutParams.FLAG_SHOW_WHEN_LOCKED)&#10;        window.addFlags(WindowManager.LayoutParams.FLAG_TURN_SCREEN_ON)&#10;&#10;        // Make this a launcher activity and clear task&#10;        intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK or Intent.FLAG_ACTIVITY_CLEAR_TASK)&#10;    }&#10;&#10;    private fun setupFullScreen() {&#10;        WindowCompat.setDecorFitsSystemWindows(window, false)&#10;        val controller = WindowInsetsControllerCompat(window, binding.root)&#10;        controller.hide(WindowInsetsCompat.Type.systemBars())&#10;        controller.systemBarsBehavior = WindowInsetsControllerCompat.BEHAVIOR_SHOW_TRANSIENT_BARS_BY_SWIPE&#10;&#10;        // Hide system UI completely&#10;        binding.root.systemUiVisibility = (View.SYSTEM_UI_FLAG_LAYOUT_STABLE&#10;                or View.SYSTEM_UI_FLAG_LAYOUT_HIDE_NAVIGATION&#10;                or View.SYSTEM_UI_FLAG_LAYOUT_FULLSCREEN&#10;                or View.SYSTEM_UI_FLAG_HIDE_NAVIGATION&#10;                or View.SYSTEM_UI_FLAG_FULLSCREEN&#10;                or View.SYSTEM_UI_FLAG_IMMERSIVE_STICKY)&#10;    }&#10;&#10;    private fun setupClickListener() {&#10;        binding.root.setOnClickListener {&#10;            // Only navigate if modal is not visible&#10;            if (binding.modalOverlay.visibility == View.GONE) {&#10;                val intent = Intent(this, VendingActivity::class.java)&#10;                startActivity(intent)&#10;                overridePendingTransition(R.anim.slide_in_right, R.anim.slide_out_left)&#10;            }&#10;        }&#10;    }&#10;&#10;    private fun setupQuestionMarkAnimation() {&#10;        // Create a subtle shaking animation for the question mark&#10;        val shakeAnimation = ObjectAnimator.ofFloat(binding.questionMarkIcon, &quot;rotation&quot;, -5f, 5f, -5f, 5f, 0f)&#10;        shakeAnimation.duration = 2000&#10;        shakeAnimation.repeatCount = ObjectAnimator.INFINITE&#10;        shakeAnimation.repeatMode = ObjectAnimator.RESTART&#10;        shakeAnimation.interpolator = AccelerateDecelerateInterpolator()&#10;        shakeAnimation.start()&#10;    }&#10;&#10;    private fun setupModalFunctionality() {&#10;        // Question mark button click&#10;        binding.questionMarkButton.setOnClickListener {&#10;            showModal()&#10;        }&#10;&#10;        // Close modal button click&#10;        binding.closeModalButton.setOnClickListener {&#10;            hideModal()&#10;        }&#10;&#10;        // Click outside modal to close&#10;        binding.modalOverlay.setOnClickListener { view -&gt;&#10;            if (view == binding.modalOverlay) {&#10;                hideModal()&#10;            }&#10;        }&#10;&#10;        // Prevent modal content clicks from closing modal&#10;        binding.modalContent.setOnClickListener {&#10;            // Do nothing - prevent click from bubbling up&#10;        }&#10;    }&#10;&#10;    private fun showModal() {&#10;        binding.modalOverlay.visibility = View.VISIBLE&#10;&#10;        // Animate modal appearance&#10;        binding.modalContent.alpha = 0f&#10;        binding.modalContent.scaleX = 0.8f&#10;        binding.modalContent.scaleY = 0.8f&#10;&#10;        binding.modalContent.animate()&#10;            .alpha(1f)&#10;            .scaleX(1f)&#10;            .scaleY(1f)&#10;            .setDuration(300)&#10;            .setInterpolator(AccelerateDecelerateInterpolator())&#10;            .start()&#10;    }&#10;&#10;    private fun hideModal() {&#10;        binding.modalContent.animate()&#10;            .alpha(0f)&#10;            .scaleX(0.8f)&#10;            .scaleY(0.8f)&#10;            .setDuration(250)&#10;            .setInterpolator(AccelerateDecelerateInterpolator())&#10;            .withEndAction {&#10;                binding.modalOverlay.visibility = View.GONE&#10;            }&#10;            .start()&#10;    }&#10;&#10;    // Prevent back button from exiting app&#10;    override fun onBackPressed() {&#10;        // Do nothing - disable back button&#10;    }&#10;&#10;    // Prevent hardware keys from exiting&#10;    override fun onKeyDown(keyCode: Int, event: KeyEvent?): Boolean {&#10;        return when (keyCode) {&#10;            KeyEvent.KEYCODE_HOME,&#10;            KeyEvent.KEYCODE_RECENT_APPS,&#10;            KeyEvent.KEYCODE_BACK -&gt; true // Block these keys&#10;            else -&gt; super.onKeyDown(keyCode, event)&#10;        }&#10;    }&#10;&#10;    override fun onWindowFocusChanged(hasFocus: Boolean) {&#10;        super.onWindowFocusChanged(hasFocus)&#10;        if (hasFocus) {&#10;            setupFullScreen()&#10;        }&#10;    }&#10;}" />
              <option name="updatedContent" value="package com.waterfountainmachine.app&#10;&#10;import android.animation.AnimatorSet&#10;import android.animation.ObjectAnimator&#10;import android.content.Intent&#10;import android.os.Bundle&#10;import android.view.KeyEvent&#10;import android.view.View&#10;import android.view.WindowManager&#10;import android.view.animation.AccelerateDecelerateInterpolator&#10;import android.view.animation.DecelerateInterpolator&#10;import androidx.appcompat.app.AppCompatActivity&#10;import androidx.core.view.WindowCompat&#10;import androidx.core.view.WindowInsetsCompat&#10;import androidx.core.view.WindowInsetsControllerCompat&#10;import com.waterfountainmachine.app.databinding.ActivityMainBinding&#10;&#10;class MainActivity : AppCompatActivity() {&#10;    private lateinit var binding: ActivityMainBinding&#10;    private var questionMarkAnimator: AnimatorSet? = null&#10;&#10;    override fun onCreate(savedInstanceState: Bundle?) {&#10;        super.onCreate(savedInstanceState)&#10;        binding = ActivityMainBinding.inflate(layoutInflater)&#10;        setContentView(binding.root)&#10;&#10;        setupKioskMode()&#10;        setupFullScreen()&#10;        setupClickListener()&#10;        setupQuestionMarkAnimation()&#10;        setupModalFunctionality()&#10;        setupPressAnimation()&#10;    }&#10;&#10;    private fun setupKioskMode() {&#10;        // Keep screen on&#10;        window.addFlags(WindowManager.LayoutParams.FLAG_KEEP_SCREEN_ON)&#10;&#10;        // Prevent task switching&#10;        window.addFlags(WindowManager.LayoutParams.FLAG_DISMISS_KEYGUARD)&#10;        window.addFlags(WindowManager.LayoutParams.FLAG_SHOW_WHEN_LOCKED)&#10;        window.addFlags(WindowManager.LayoutParams.FLAG_TURN_SCREEN_ON)&#10;&#10;        // Make this a launcher activity and clear task&#10;        intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK or Intent.FLAG_ACTIVITY_CLEAR_TASK)&#10;    }&#10;&#10;    private fun setupFullScreen() {&#10;        WindowCompat.setDecorFitsSystemWindows(window, false)&#10;        val controller = WindowInsetsControllerCompat(window, binding.root)&#10;        controller.hide(WindowInsetsCompat.Type.systemBars())&#10;        controller.systemBarsBehavior = WindowInsetsControllerCompat.BEHAVIOR_SHOW_TRANSIENT_BARS_BY_SWIPE&#10;&#10;        // Hide system UI completely&#10;        binding.root.systemUiVisibility = (View.SYSTEM_UI_FLAG_LAYOUT_STABLE&#10;                or View.SYSTEM_UI_FLAG_LAYOUT_HIDE_NAVIGATION&#10;                or View.SYSTEM_UI_FLAG_LAYOUT_FULLSCREEN&#10;                or View.SYSTEM_UI_FLAG_HIDE_NAVIGATION&#10;                or View.SYSTEM_UI_FLAG_FULLSCREEN&#10;                or View.SYSTEM_UI_FLAG_IMMERSIVE_STICKY)&#10;    }&#10;&#10;    private fun setupClickListener() {&#10;        binding.root.setOnClickListener {&#10;            // Only navigate if modal is not visible&#10;            if (binding.modalOverlay.visibility == View.GONE) {&#10;                performPressAnimation {&#10;                    val intent = Intent(this, VendingActivity::class.java)&#10;                    startActivity(intent)&#10;                    // Use Material Design's shared axis Z transition&#10;                    overridePendingTransition(android.R.anim.fade_in, android.R.anim.fade_out)&#10;                }&#10;            }&#10;        }&#10;    }&#10;&#10;    private fun setupQuestionMarkAnimation() {&#10;        // Create a more frequent and engaging shake animation&#10;        val shakeX = ObjectAnimator.ofFloat(binding.questionMarkButton, &quot;translationX&quot;, 0f, -12f, 12f, -8f, 8f, -4f, 4f, 0f)&#10;        shakeX.duration = 1000 // Shorter duration&#10;&#10;        val rotate = ObjectAnimator.ofFloat(binding.questionMarkIcon, &quot;rotation&quot;, 0f, 20f, -20f, 15f, -15f, 8f, -8f, 0f)&#10;        rotate.duration = 1000&#10;&#10;        val scale = ObjectAnimator.ofFloat(binding.questionMarkButton, &quot;scaleX&quot;, 1f, 1.15f, 1f)&#10;        scale.duration = 1000&#10;&#10;        val scaleY = ObjectAnimator.ofFloat(binding.questionMarkButton, &quot;scaleY&quot;, 1f, 1.15f, 1f)&#10;        scaleY.duration = 1000&#10;&#10;        questionMarkAnimator = AnimatorSet().apply {&#10;            playTogether(shakeX, rotate, scale, scaleY)&#10;            interpolator = AccelerateDecelerateInterpolator()&#10;            startDelay = 1000 // Start sooner&#10;        }&#10;&#10;        // Create repeating animation with much shorter intervals&#10;        questionMarkAnimator?.addListener(object : android.animation.AnimatorListenerAdapter() {&#10;            override fun onAnimationEnd(animation: android.animation.Animator) {&#10;                // Much more frequent shaking&#10;                binding.root.postDelayed({&#10;                    if (questionMarkAnimator != null) {&#10;                        questionMarkAnimator?.start()&#10;                    }&#10;                }, 1500) // Only 1.5 second pause between animations&#10;            }&#10;        })&#10;&#10;        questionMarkAnimator?.start()&#10;    }&#10;&#10;    private fun setupPressAnimation() {&#10;        // Add breathing animation to instruction text&#10;        setupBreathingAnimation()&#10;&#10;        // Add touch feedback to the entire screen&#10;        binding.root.setOnTouchListener { _, event -&gt;&#10;            when (event.action) {&#10;                android.view.MotionEvent.ACTION_DOWN -&gt; {&#10;                    // Create haptic-like ripple effect&#10;                    createRippleEffect(event.x, event.y)&#10;                    // Animate ONLY the content, not the background&#10;                    binding.mainContent.animate()&#10;                        .scaleX(0.98f)&#10;                        .scaleY(0.98f)&#10;                        .setDuration(100)&#10;                        .setInterpolator(DecelerateInterpolator())&#10;                        .start()&#10;                }&#10;                android.view.MotionEvent.ACTION_UP, android.view.MotionEvent.ACTION_CANCEL -&gt; {&#10;                    // Scale back to normal&#10;                    binding.mainContent.animate()&#10;                        .scaleX(1f)&#10;                        .scaleY(1f)&#10;                        .setDuration(150)&#10;                        .setInterpolator(DecelerateInterpolator())&#10;                        .start()&#10;                }&#10;            }&#10;            false // Let the click listener handle the actual click&#10;        }&#10;    }&#10;&#10;    private fun setupBreathingAnimation() {&#10;        // Create a more engaging &quot;pulse glow&quot; animation instead of just breathing&#10;        val glowIn = ObjectAnimator.ofFloat(binding.instructionText, &quot;alpha&quot;, 0.7f, 1f)&#10;        glowIn.duration = 1200&#10;&#10;        val glowOut = ObjectAnimator.ofFloat(binding.instructionText, &quot;alpha&quot;, 1f, 0.7f)&#10;        glowOut.duration = 1200&#10;&#10;        // Add a subtle color shift effect by changing text shadow/elevation&#10;        val elevateIn = ObjectAnimator.ofFloat(binding.instructionText, &quot;translationZ&quot;, 0f, 8f)&#10;        elevateIn.duration = 1200&#10;&#10;        val elevateOut = ObjectAnimator.ofFloat(binding.instructionText, &quot;translationZ&quot;, 8f, 0f)&#10;        elevateOut.duration = 1200&#10;&#10;        // Add a gentle wave-like scale effect&#10;        val scaleInX = ObjectAnimator.ofFloat(binding.instructionText, &quot;scaleX&quot;, 1f, 1.03f)&#10;        scaleInX.duration = 1200&#10;&#10;        val scaleInY = ObjectAnimator.ofFloat(binding.instructionText, &quot;scaleY&quot;, 1f, 1.03f)&#10;        scaleInY.duration = 1200&#10;&#10;        val scaleOutX = ObjectAnimator.ofFloat(binding.instructionText, &quot;scaleX&quot;, 1.03f, 1f)&#10;        scaleOutX.duration = 1200&#10;&#10;        val scaleOutY = ObjectAnimator.ofFloat(binding.instructionText, &quot;scaleY&quot;, 1.03f, 1f)&#10;        scaleOutY.duration = 1200&#10;&#10;        val pulseSet = AnimatorSet().apply {&#10;            play(glowIn).with(elevateIn).with(scaleInX).with(scaleInY)&#10;            play(glowOut).with(elevateOut).with(scaleOutX).with(scaleOutY).after(glowIn)&#10;            interpolator = AccelerateDecelerateInterpolator()&#10;        }&#10;&#10;        // Make it repeat continuously with shorter intervals&#10;        pulseSet.addListener(object : android.animation.AnimatorListenerAdapter() {&#10;            override fun onAnimationEnd(animation: android.animation.Animator) {&#10;                // Shorter pause between pulses for more engagement&#10;                binding.root.postDelayed({&#10;                    pulseSet.start()&#10;                }, 500) // Only 0.5 second pause&#10;            }&#10;        })&#10;&#10;        pulseSet.start()&#10;    }&#10;&#10;    private fun createRippleEffect(x: Float, y: Float) {&#10;        // Only use the circular ripple effect - no background manipulation&#10;        createCircularRipple(x, y)&#10;    }&#10;&#10;    private fun createCircularRipple(x: Float, y: Float) {&#10;        // Create a circular ripple effect at the touch location&#10;        val rippleView = View(this).apply {&#10;            layoutParams = android.widget.FrameLayout.LayoutParams(200, 200)&#10;            // Create a circular background programmatically&#10;            background = createCircularDrawable()&#10;            alpha = 0.6f&#10;            scaleX = 0.1f&#10;            scaleY = 0.1f&#10;            translationX = x - 100f&#10;            translationY = y - 100f&#10;            elevation = 10f&#10;        }&#10;&#10;        binding.root.addView(rippleView)&#10;&#10;        // Animate the ripple expanding and fading&#10;        rippleView.animate()&#10;            .scaleX(4f)&#10;            .scaleY(4f)&#10;            .alpha(0f)&#10;            .setDuration(500)&#10;            .withEndAction {&#10;                binding.root.removeView(rippleView)&#10;            }&#10;            .start()&#10;    }&#10;&#10;    private fun createCircularDrawable(): android.graphics.drawable.Drawable {&#10;        val drawable = android.graphics.drawable.GradientDrawable()&#10;        drawable.shape = android.graphics.drawable.GradientDrawable.OVAL&#10;        drawable.setColor(0x4DFFFFFF) // Semi-transparent white&#10;        drawable.setStroke(4, 0x80FFFFFF.toInt()) // Light border&#10;        return drawable&#10;    }&#10;&#10;    private fun performPressAnimation(onComplete: () -&gt; Unit) {&#10;        // Create a satisfying press animation before navigation - animate content only&#10;        val scaleDown = ObjectAnimator.ofFloat(binding.mainContent, &quot;scaleX&quot;, 1f, 0.95f)&#10;        val scaleDownY = ObjectAnimator.ofFloat(binding.mainContent, &quot;scaleY&quot;, 1f, 0.95f)&#10;        val scaleUp = ObjectAnimator.ofFloat(binding.mainContent, &quot;scaleX&quot;, 0.95f, 1.02f)&#10;        val scaleUpY = ObjectAnimator.ofFloat(binding.mainContent, &quot;scaleY&quot;, 0.95f, 1.02f)&#10;        val scaleNormal = ObjectAnimator.ofFloat(binding.mainContent, &quot;scaleX&quot;, 1.02f, 1f)&#10;        val scaleNormalY = ObjectAnimator.ofFloat(binding.mainContent, &quot;scaleY&quot;, 1.02f, 1f)&#10;&#10;        val animatorSet = AnimatorSet().apply {&#10;            play(scaleDown).with(scaleDownY)&#10;            play(scaleUp).with(scaleUpY).after(scaleDown)&#10;            play(scaleNormal).with(scaleNormalY).after(scaleUp)&#10;            duration = 200&#10;            interpolator = AccelerateDecelerateInterpolator()&#10;        }&#10;&#10;        animatorSet.addListener(object : android.animation.AnimatorListenerAdapter() {&#10;            override fun onAnimationEnd(animation: android.animation.Animator) {&#10;                onComplete()&#10;            }&#10;        })&#10;&#10;        animatorSet.start()&#10;    }&#10;&#10;    private fun setupModalFunctionality() {&#10;        // Question mark button click&#10;        binding.questionMarkButton.setOnClickListener {&#10;            showModal()&#10;        }&#10;&#10;        // Close modal button click&#10;        binding.closeModalButton.setOnClickListener {&#10;            hideModal()&#10;        }&#10;&#10;        // Click outside modal to close&#10;        binding.modalOverlay.setOnClickListener { view -&gt;&#10;            if (view == binding.modalOverlay) {&#10;                hideModal()&#10;            }&#10;        }&#10;&#10;        // Prevent modal content clicks from closing modal&#10;        binding.modalContent.setOnClickListener {&#10;            // Do nothing - prevent click from bubbling up&#10;        }&#10;    }&#10;&#10;    private fun showModal() {&#10;        binding.modalOverlay.visibility = View.VISIBLE&#10;&#10;        // Animate modal appearance&#10;        binding.modalContent.alpha = 0f&#10;        binding.modalContent.scaleX = 0.8f&#10;        binding.modalContent.scaleY = 0.8f&#10;&#10;        binding.modalContent.animate()&#10;            .alpha(1f)&#10;            .scaleX(1f)&#10;            .scaleY(1f)&#10;            .setDuration(300)&#10;            .setInterpolator(AccelerateDecelerateInterpolator())&#10;            .start()&#10;    }&#10;&#10;    private fun hideModal() {&#10;        binding.modalContent.animate()&#10;            .alpha(0f)&#10;            .scaleX(0.8f)&#10;            .scaleY(0.8f)&#10;            .setDuration(250)&#10;            .setInterpolator(AccelerateDecelerateInterpolator())&#10;            .withEndAction {&#10;                binding.modalOverlay.visibility = View.GONE&#10;            }&#10;            .start()&#10;    }&#10;&#10;    // Prevent back button from exiting app&#10;    override fun onBackPressed() {&#10;        // Do nothing - disable back button&#10;    }&#10;&#10;    // Prevent hardware keys from exiting&#10;    override fun onKeyDown(keyCode: Int, event: KeyEvent?): Boolean {&#10;        return when (keyCode) {&#10;            KeyEvent.KEYCODE_HOME,&#10;            KeyEvent.KEYCODE_RECENT_APPS,&#10;            KeyEvent.KEYCODE_BACK -&gt; true // Block these keys&#10;            else -&gt; super.onKeyDown(keyCode, event)&#10;        }&#10;    }&#10;&#10;    override fun onWindowFocusChanged(hasFocus: Boolean) {&#10;        super.onWindowFocusChanged(hasFocus)&#10;        if (hasFocus) {&#10;            setupFullScreen()&#10;        }&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/waterfountainmachine/app/PINActivity.kt">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/waterfountainmachine/app/PINActivity.kt" />
              <option name="updatedContent" value="package com.waterfountainmachine.app&#10;&#10;import android.os.Bundle&#10;import android.os.Handler&#10;import android.os.Looper&#10;import android.view.KeyEvent&#10;import android.view.View&#10;import androidx.appcompat.app.AppCompatActivity&#10;import androidx.core.view.WindowCompat&#10;import androidx.core.view.WindowInsetsCompat&#10;import androidx.core.view.WindowInsetsControllerCompat&#10;import com.waterfountainmachine.app.databinding.ActivityPinBinding&#10;&#10;class PINActivity : AppCompatActivity() {&#10;    private lateinit var binding: ActivityPinBinding&#10;    private val inactivityHandler = Handler(Looper.getMainLooper())&#10;    private val inactivityTimeout = 30000L // 30 seconds&#10;&#10;    override fun onCreate(savedInstanceState: Bundle?) {&#10;        super.onCreate(savedInstanceState)&#10;        binding = ActivityPinBinding.inflate(layoutInflater)&#10;        setContentView(binding.root)&#10;&#10;        setupFullScreen()&#10;        setupClickListeners()&#10;        startInactivityTimer()&#10;    }&#10;&#10;    private fun setupFullScreen() {&#10;        WindowCompat.setDecorFitsSystemWindows(window, false)&#10;        val controller = WindowInsetsControllerCompat(window, binding.root)&#10;        controller.hide(WindowInsetsCompat.Type.systemBars())&#10;        controller.systemBarsBehavior = WindowInsetsControllerCompat.BEHAVIOR_SHOW_TRANSIENT_BARS_BY_SWIPE&#10;&#10;        // Hide system UI completely&#10;        binding.root.systemUiVisibility = (View.SYSTEM_UI_FLAG_LAYOUT_STABLE&#10;                or View.SYSTEM_UI_FLAG_LAYOUT_HIDE_NAVIGATION&#10;                or View.SYSTEM_UI_FLAG_LAYOUT_FULLSCREEN&#10;                or View.SYSTEM_UI_FLAG_HIDE_NAVIGATION&#10;                or View.SYSTEM_UI_FLAG_FULLSCREEN&#10;                or View.SYSTEM_UI_FLAG_IMMERSIVE_STICKY)&#10;    }&#10;&#10;    private fun setupClickListeners() {&#10;        binding.backButton.setOnClickListener {&#10;            returnToVendingScreen()&#10;        }&#10;    }&#10;&#10;    private fun returnToVendingScreen() {&#10;        finish()&#10;        overridePendingTransition(android.R.anim.fade_in, android.R.anim.fade_out)&#10;    }&#10;&#10;    private fun startInactivityTimer() {&#10;        inactivityHandler.postDelayed({&#10;            returnToMainScreen()&#10;        }, inactivityTimeout)&#10;    }&#10;&#10;    private fun returnToMainScreen() {&#10;        // Navigate back to MainActivity&#10;        finish()&#10;        overridePendingTransition(android.R.anim.fade_in, android.R.anim.fade_out)&#10;    }&#10;&#10;    private fun resetInactivityTimer() {&#10;        inactivityHandler.removeCallbacksAndMessages(null)&#10;        startInactivityTimer()&#10;    }&#10;&#10;    override fun onUserInteraction() {&#10;        super.onUserInteraction()&#10;        resetInactivityTimer()&#10;    }&#10;&#10;    // Prevent back button from exiting app&#10;    override fun onBackPressed() {&#10;        returnToVendingScreen()&#10;    }&#10;&#10;    // Prevent hardware keys from exiting&#10;    override fun onKeyDown(keyCode: Int, event: KeyEvent?): Boolean {&#10;        return when (keyCode) {&#10;            KeyEvent.KEYCODE_HOME,&#10;            KeyEvent.KEYCODE_RECENT_APPS -&gt; true // Block these keys&#10;            KeyEvent.KEYCODE_BACK -&gt; {&#10;                returnToVendingScreen()&#10;                true&#10;            }&#10;            else -&gt; super.onKeyDown(keyCode, event)&#10;        }&#10;    }&#10;&#10;    override fun onWindowFocusChanged(hasFocus: Boolean) {&#10;        super.onWindowFocusChanged(hasFocus)&#10;        if (hasFocus) {&#10;            setupFullScreen()&#10;        }&#10;    }&#10;&#10;    override fun onDestroy() {&#10;        super.onDestroy()&#10;        inactivityHandler.removeCallbacksAndMessages(null)&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/waterfountainmachine/app/VendingActivity.kt">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/waterfountainmachine/app/VendingActivity.kt" />
              <option name="originalContent" value="package com.waterfountainmachine.app&#10;&#10;import android.content.Intent&#10;import android.os.Bundle&#10;import android.os.Handler&#10;import android.os.Looper&#10;import android.view.KeyEvent&#10;import android.view.View&#10;import androidx.appcompat.app.AppCompatActivity&#10;import androidx.core.view.WindowCompat&#10;import androidx.core.view.WindowInsetsCompat&#10;import androidx.core.view.WindowInsetsControllerCompat&#10;import com.waterfountainmachine.app.databinding.ActivityVendingBinding&#10;&#10;class VendingActivity : AppCompatActivity() {&#10;    private lateinit var binding: ActivityVendingBinding&#10;    private val inactivityHandler = Handler(Looper.getMainLooper())&#10;    private val inactivityTimeout = 30000L // 30 seconds&#10;&#10;    override fun onCreate(savedInstanceState: Bundle?) {&#10;        super.onCreate(savedInstanceState)&#10;        binding = ActivityVendingBinding.inflate(layoutInflater)&#10;        setContentView(binding.root)&#10;&#10;        setupFullScreen()&#10;        setupClickListeners()&#10;        startInactivityTimer()&#10;    }&#10;&#10;    private fun setupFullScreen() {&#10;        WindowCompat.setDecorFitsSystemWindows(window, false)&#10;        val controller = WindowInsetsControllerCompat(window, binding.root)&#10;        controller.hide(WindowInsetsCompat.Type.systemBars())&#10;        controller.systemBarsBehavior = WindowInsetsControllerCompat.BEHAVIOR_SHOW_TRANSIENT_BARS_BY_SWIPE&#10;&#10;        // Hide system UI completely&#10;        binding.root.systemUiVisibility = (View.SYSTEM_UI_FLAG_LAYOUT_STABLE&#10;                or View.SYSTEM_UI_FLAG_LAYOUT_HIDE_NAVIGATION&#10;                or View.SYSTEM_UI_FLAG_LAYOUT_FULLSCREEN&#10;                or View.SYSTEM_UI_FLAG_HIDE_NAVIGATION&#10;                or View.SYSTEM_UI_FLAG_FULLSCREEN&#10;                or View.SYSTEM_UI_FLAG_IMMERSIVE_STICKY)&#10;    }&#10;&#10;    private fun setupClickListeners() {&#10;        binding.smsCard.setOnClickListener {&#10;            resetInactivityTimer()&#10;            val intent = Intent(this, SMSActivity::class.java)&#10;            startActivity(intent)&#10;            overridePendingTransition(R.anim.slide_in_right, R.anim.slide_out_left)&#10;        }&#10;&#10;        binding.qrCodeCard.setOnClickListener {&#10;            resetInactivityTimer()&#10;            val intent = Intent(this, QRActivity::class.java)&#10;            startActivity(intent)&#10;            overridePendingTransition(R.anim.slide_in_right, R.anim.slide_out_left)&#10;        }&#10;&#10;        binding.backButton.setOnClickListener {&#10;            returnToMainScreen()&#10;        }&#10;    }&#10;&#10;    private fun returnToMainScreen() {&#10;        finish()&#10;        overridePendingTransition(R.anim.slide_in_left, R.anim.slide_out_right)&#10;    }&#10;&#10;    private fun startInactivityTimer() {&#10;        inactivityHandler.postDelayed({&#10;            returnToMainScreen()&#10;        }, inactivityTimeout)&#10;    }&#10;&#10;    private fun resetInactivityTimer() {&#10;        inactivityHandler.removeCallbacksAndMessages(null)&#10;        startInactivityTimer()&#10;    }&#10;&#10;    override fun onUserInteraction() {&#10;        super.onUserInteraction()&#10;        resetInactivityTimer()&#10;    }&#10;&#10;    // Prevent back button from exiting app - return to main screen instead&#10;    override fun onBackPressed() {&#10;        returnToMainScreen()&#10;    }&#10;&#10;    // Prevent hardware keys from exiting&#10;    override fun onKeyDown(keyCode: Int, event: KeyEvent?): Boolean {&#10;        return when (keyCode) {&#10;            KeyEvent.KEYCODE_HOME,&#10;            KeyEvent.KEYCODE_RECENT_APPS -&gt; true // Block these keys&#10;            KeyEvent.KEYCODE_BACK -&gt; {&#10;                returnToMainScreen()&#10;                true&#10;            }&#10;            else -&gt; super.onKeyDown(keyCode, event)&#10;        }&#10;    }&#10;&#10;    override fun onWindowFocusChanged(hasFocus: Boolean) {&#10;        super.onWindowFocusChanged(hasFocus)&#10;        if (hasFocus) {&#10;            setupFullScreen()&#10;        }&#10;    }&#10;&#10;    override fun onDestroy() {&#10;        super.onDestroy()&#10;        inactivityHandler.removeCallbacksAndMessages(null)&#10;    }&#10;}" />
              <option name="updatedContent" value="package com.waterfountainmachine.app&#10;&#10;import android.animation.AnimatorSet&#10;import android.animation.ObjectAnimator&#10;import android.content.Intent&#10;import android.os.Bundle&#10;import android.os.Handler&#10;import android.os.Looper&#10;import android.view.KeyEvent&#10;import android.view.View&#10;import android.view.animation.AccelerateDecelerateInterpolator&#10;import androidx.appcompat.app.AppCompatActivity&#10;import androidx.core.view.WindowCompat&#10;import androidx.core.view.WindowInsetsCompat&#10;import androidx.core.view.WindowInsetsControllerCompat&#10;import com.waterfountainmachine.app.databinding.ActivityVendingBinding&#10;&#10;class VendingActivity : AppCompatActivity() {&#10;    private lateinit var binding: ActivityVendingBinding&#10;    private val inactivityHandler = Handler(Looper.getMainLooper())&#10;    private val inactivityTimeout = 30000L // 30 seconds&#10;    private var questionMarkAnimator: AnimatorSet? = null&#10;&#10;    override fun onCreate(savedInstanceState: Bundle?) {&#10;        super.onCreate(savedInstanceState)&#10;        binding = ActivityVendingBinding.inflate(layoutInflater)&#10;        setContentView(binding.root)&#10;&#10;        setupFullScreen()&#10;        setupClickListeners()&#10;        setupQuestionMarkAnimation()&#10;        setupModalFunctionality()&#10;        startInactivityTimer()&#10;    }&#10;&#10;    private fun setupFullScreen() {&#10;        WindowCompat.setDecorFitsSystemWindows(window, false)&#10;        val controller = WindowInsetsControllerCompat(window, binding.root)&#10;        controller.hide(WindowInsetsCompat.Type.systemBars())&#10;        controller.systemBarsBehavior = WindowInsetsControllerCompat.BEHAVIOR_SHOW_TRANSIENT_BARS_BY_SWIPE&#10;&#10;        // Hide system UI completely&#10;        binding.root.systemUiVisibility = (View.SYSTEM_UI_FLAG_LAYOUT_STABLE&#10;                or View.SYSTEM_UI_FLAG_LAYOUT_HIDE_NAVIGATION&#10;                or View.SYSTEM_UI_FLAG_LAYOUT_FULLSCREEN&#10;                or View.SYSTEM_UI_FLAG_HIDE_NAVIGATION&#10;                or View.SYSTEM_UI_FLAG_FULLSCREEN&#10;                or View.SYSTEM_UI_FLAG_IMMERSIVE_STICKY)&#10;    }&#10;&#10;    private fun setupClickListeners() {&#10;        binding.smsCard.setOnClickListener {&#10;            resetInactivityTimer()&#10;            performCardClickAnimation(binding.smsCard) {&#10;                val intent = Intent(this, SMSActivity::class.java)&#10;                startActivity(intent)&#10;                // Use zoom transition for a modern, engaging feel&#10;                overridePendingTransition(R.anim.zoom_in_fade, R.anim.zoom_out_fade)&#10;            }&#10;        }&#10;&#10;        // PIN Code card is now disabled - no click listener&#10;        // QR Code card is now properly disabled - no click listener&#10;&#10;        binding.backButton.setOnClickListener {&#10;            returnToMainScreen()&#10;        }&#10;    }&#10;&#10;    private fun returnToMainScreen() {&#10;        finish()&#10;        overridePendingTransition(android.R.anim.fade_in, android.R.anim.fade_out)&#10;    }&#10;&#10;    private fun startInactivityTimer() {&#10;        inactivityHandler.postDelayed({&#10;            returnToMainScreen()&#10;        }, inactivityTimeout)&#10;    }&#10;&#10;    private fun resetInactivityTimer() {&#10;        inactivityHandler.removeCallbacksAndMessages(null)&#10;        startInactivityTimer()&#10;    }&#10;&#10;    override fun onUserInteraction() {&#10;        super.onUserInteraction()&#10;        resetInactivityTimer()&#10;    }&#10;&#10;    // Prevent back button from exiting app - return to main screen instead&#10;    override fun onBackPressed() {&#10;        returnToMainScreen()&#10;    }&#10;&#10;    // Prevent hardware keys from exiting&#10;    override fun onKeyDown(keyCode: Int, event: KeyEvent?): Boolean {&#10;        return when (keyCode) {&#10;            KeyEvent.KEYCODE_HOME,&#10;            KeyEvent.KEYCODE_RECENT_APPS -&gt; true // Block these keys&#10;            KeyEvent.KEYCODE_BACK -&gt; {&#10;                returnToMainScreen()&#10;                true&#10;            }&#10;            else -&gt; super.onKeyDown(keyCode, event)&#10;        }&#10;    }&#10;&#10;    override fun onWindowFocusChanged(hasFocus: Boolean) {&#10;        super.onWindowFocusChanged(hasFocus)&#10;        if (hasFocus) {&#10;            setupFullScreen()&#10;        }&#10;    }&#10;&#10;    override fun onDestroy() {&#10;        super.onDestroy()&#10;        inactivityHandler.removeCallbacksAndMessages(null)&#10;    }&#10;&#10;    private fun setupQuestionMarkAnimation() {&#10;        // Create a more frequent and engaging shake animation&#10;        val shakeX = ObjectAnimator.ofFloat(binding.questionMarkButton, &quot;translationX&quot;, 0f, -12f, 12f, -8f, 8f, -4f, 4f, 0f)&#10;        shakeX.duration = 1000 // Shorter duration&#10;&#10;        val rotate = ObjectAnimator.ofFloat(binding.questionMarkIcon, &quot;rotation&quot;, 0f, 20f, -20f, 15f, -15f, 8f, -8f, 0f)&#10;        rotate.duration = 1000&#10;&#10;        val scale = ObjectAnimator.ofFloat(binding.questionMarkButton, &quot;scaleX&quot;, 1f, 1.15f, 1f)&#10;        scale.duration = 1000&#10;&#10;        val scaleY = ObjectAnimator.ofFloat(binding.questionMarkButton, &quot;scaleY&quot;, 1f, 1.15f, 1f)&#10;        scaleY.duration = 1000&#10;&#10;        questionMarkAnimator = AnimatorSet().apply {&#10;            playTogether(shakeX, rotate, scale, scaleY)&#10;            interpolator = AccelerateDecelerateInterpolator()&#10;            startDelay = 1000 // Start sooner&#10;        }&#10;&#10;        // Create repeating animation with much shorter intervals&#10;        questionMarkAnimator?.addListener(object : android.animation.AnimatorListenerAdapter() {&#10;            override fun onAnimationEnd(animation: android.animation.Animator) {&#10;                // Much more frequent shaking&#10;                binding.root.postDelayed({&#10;                    if (questionMarkAnimator != null) {&#10;                        questionMarkAnimator?.start()&#10;                    }&#10;                }, 1500) // Only 1.5 second pause between animations&#10;            }&#10;        })&#10;&#10;        questionMarkAnimator?.start()&#10;    }&#10;&#10;    private fun setupModalFunctionality() {&#10;        // Question mark button click&#10;        binding.questionMarkButton.setOnClickListener {&#10;            resetInactivityTimer()&#10;            showModal()&#10;        }&#10;&#10;        // Close modal button click&#10;        binding.closeModalButton.setOnClickListener {&#10;            hideModal()&#10;        }&#10;&#10;        // Click outside modal to close&#10;        binding.modalOverlay.setOnClickListener { view -&gt;&#10;            if (view == binding.modalOverlay) {&#10;                hideModal()&#10;            }&#10;        }&#10;&#10;        // Prevent modal content clicks from closing modal&#10;        binding.modalContent.setOnClickListener {&#10;            // Do nothing - prevent click from bubbling up&#10;        }&#10;    }&#10;&#10;    private fun showModal() {&#10;        binding.modalOverlay.visibility = View.VISIBLE&#10;&#10;        // Animate modal appearance&#10;        binding.modalContent.alpha = 0f&#10;        binding.modalContent.scaleX = 0.8f&#10;        binding.modalContent.scaleY = 0.8f&#10;&#10;        binding.modalContent.animate()&#10;            .alpha(1f)&#10;            .scaleX(1f)&#10;            .scaleY(1f)&#10;            .setDuration(300)&#10;            .setInterpolator(AccelerateDecelerateInterpolator())&#10;            .start()&#10;    }&#10;&#10;    private fun hideModal() {&#10;        binding.modalContent.animate()&#10;            .alpha(0f)&#10;            .scaleX(0.8f)&#10;            .scaleY(0.8f)&#10;            .setDuration(250)&#10;            .setInterpolator(AccelerateDecelerateInterpolator())&#10;            .withEndAction {&#10;                binding.modalOverlay.visibility = View.GONE&#10;            }&#10;            .start()&#10;    }&#10;&#10;    private fun performCardClickAnimation(card: View, onComplete: () -&gt; Unit) {&#10;        // Create satisfying Material Design-style press animation&#10;        val scaleDownX = ObjectAnimator.ofFloat(card, &quot;scaleX&quot;, 1f, 0.95f)&#10;        val scaleDownY = ObjectAnimator.ofFloat(card, &quot;scaleY&quot;, 1f, 0.95f)&#10;        val scaleUpX = ObjectAnimator.ofFloat(card, &quot;scaleX&quot;, 0.95f, 1.02f)&#10;        val scaleUpY = ObjectAnimator.ofFloat(card, &quot;scaleY&quot;, 0.95f, 1.02f)&#10;        val scaleNormalX = ObjectAnimator.ofFloat(card, &quot;scaleX&quot;, 1.02f, 1f)&#10;        val scaleNormalY = ObjectAnimator.ofFloat(card, &quot;scaleY&quot;, 1.02f, 1f)&#10;&#10;        // Add elevation animation for depth feedback&#10;        val elevateUp = ObjectAnimator.ofFloat(card, &quot;elevation&quot;, 8f, 16f)&#10;        val elevateDown = ObjectAnimator.ofFloat(card, &quot;elevation&quot;, 16f, 8f)&#10;&#10;        val pressSet = AnimatorSet().apply {&#10;            play(scaleDownX).with(scaleDownY).with(elevateUp)&#10;            duration = 100&#10;            interpolator = AccelerateDecelerateInterpolator()&#10;        }&#10;&#10;        val bounceSet = AnimatorSet().apply {&#10;            play(scaleUpX).with(scaleUpY)&#10;            duration = 150&#10;            interpolator = AccelerateDecelerateInterpolator()&#10;        }&#10;&#10;        val normalizeSet = AnimatorSet().apply {&#10;            play(scaleNormalX).with(scaleNormalY).with(elevateDown)&#10;            duration = 100&#10;            interpolator = AccelerateDecelerateInterpolator()&#10;        }&#10;&#10;        val fullAnimation = AnimatorSet().apply {&#10;            playSequentially(pressSet, bounceSet, normalizeSet)&#10;        }&#10;&#10;        fullAnimation.addListener(object : android.animation.AnimatorListenerAdapter() {&#10;            override fun onAnimationEnd(animation: android.animation.Animator) {&#10;                onComplete()&#10;            }&#10;        })&#10;&#10;        fullAnimation.start()&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/anim/material_slide_in_left.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/anim/material_slide_in_left.xml" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;set xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&gt;&#10;    &lt;!-- Slide in from left with scale and fade (return animation) --&gt;&#10;    &lt;translate&#10;        android:fromXDelta=&quot;-30%p&quot;&#10;        android:toXDelta=&quot;0&quot;&#10;        android:duration=&quot;400&quot;&#10;        android:interpolator=&quot;@android:anim/accelerate_decelerate_interpolator&quot;/&gt;&#10;    &#10;    &lt;scale&#10;        android:fromXScale=&quot;0.95&quot;&#10;        android:toXScale=&quot;1.0&quot;&#10;        android:fromYScale=&quot;0.95&quot;&#10;        android:toYScale=&quot;1.0&quot;&#10;        android:pivotX=&quot;50%&quot;&#10;        android:pivotY=&quot;50%&quot;&#10;        android:duration=&quot;400&quot;&#10;        android:interpolator=&quot;@android:anim/accelerate_decelerate_interpolator&quot;/&gt;&#10;    &#10;    &lt;alpha&#10;        android:fromAlpha=&quot;0.3&quot;&#10;        android:toAlpha=&quot;1.0&quot;&#10;        android:duration=&quot;300&quot;&#10;        android:interpolator=&quot;@android:anim/accelerate_interpolator&quot;/&gt;&#10;&lt;/set&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/anim/material_slide_in_right.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/anim/material_slide_in_right.xml" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;set xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&gt;&#10;    &lt;!-- Slide in from right with scale and fade --&gt;&#10;    &lt;translate&#10;        android:fromXDelta=&quot;50%p&quot;&#10;        android:toXDelta=&quot;0&quot;&#10;        android:duration=&quot;400&quot;&#10;        android:interpolator=&quot;@android:anim/accelerate_decelerate_interpolator&quot;/&gt;&#10;    &#10;    &lt;scale&#10;        android:fromXScale=&quot;0.95&quot;&#10;        android:toXScale=&quot;1.0&quot;&#10;        android:fromYScale=&quot;0.95&quot;&#10;        android:toYScale=&quot;1.0&quot;&#10;        android:pivotX=&quot;50%&quot;&#10;        android:pivotY=&quot;50%&quot;&#10;        android:duration=&quot;400&quot;&#10;        android:interpolator=&quot;@android:anim/accelerate_decelerate_interpolator&quot;/&gt;&#10;    &#10;    &lt;alpha&#10;        android:fromAlpha=&quot;0.0&quot;&#10;        android:toAlpha=&quot;1.0&quot;&#10;        android:duration=&quot;300&quot;&#10;        android:interpolator=&quot;@android:anim/accelerate_interpolator&quot;/&gt;&#10;&lt;/set&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/anim/material_slide_out_left.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/anim/material_slide_out_left.xml" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;set xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&gt;&#10;    &lt;!-- Slide out to left with scale and fade --&gt;&#10;    &lt;translate&#10;        android:fromXDelta=&quot;0&quot;&#10;        android:toXDelta=&quot;-30%p&quot;&#10;        android:duration=&quot;400&quot;&#10;        android:interpolator=&quot;@android:anim/accelerate_decelerate_interpolator&quot;/&gt;&#10;    &#10;    &lt;scale&#10;        android:fromXScale=&quot;1.0&quot;&#10;        android:toXScale=&quot;0.95&quot;&#10;        android:fromYScale=&quot;1.0&quot;&#10;        android:toYScale=&quot;0.95&quot;&#10;        android:pivotX=&quot;50%&quot;&#10;        android:pivotY=&quot;50%&quot;&#10;        android:duration=&quot;400&quot;&#10;        android:interpolator=&quot;@android:anim/accelerate_decelerate_interpolator&quot;/&gt;&#10;    &#10;    &lt;alpha&#10;        android:fromAlpha=&quot;1.0&quot;&#10;        android:toAlpha=&quot;0.3&quot;&#10;        android:duration=&quot;350&quot;&#10;        android:interpolator=&quot;@android:anim/decelerate_interpolator&quot;/&gt;&#10;&lt;/set&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/anim/zoom_in_back.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/anim/zoom_in_back.xml" />
              <option name="originalContent" value="&#10;&#10;" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;set xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    android:duration=&quot;350&quot;&#10;    android:interpolator=&quot;@android:anim/accelerate_decelerate_interpolator&quot;&gt;&#10;&#10;    &lt;!-- Scale down the screen coming back --&gt;&#10;    &lt;scale&#10;        android:fromXScale=&quot;0.85&quot;&#10;        android:toXScale=&quot;1.0&quot;&#10;        android:fromYScale=&quot;0.85&quot;&#10;        android:toYScale=&quot;1.0&quot;&#10;        android:pivotX=&quot;50%&quot;&#10;        android:pivotY=&quot;50%&quot;&#10;        android:duration=&quot;300&quot;&#10;        android:interpolator=&quot;@android:anim/decelerate_interpolator&quot; /&gt;&#10;&#10;&lt;/set&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/anim/zoom_in_fade.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/anim/zoom_in_fade.xml" />
              <option name="originalContent" value="&#10;&#10;&#10;" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;scale xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    android:fromXScale=&quot;1.15&quot;&#10;    android:toXScale=&quot;1.0&quot;&#10;    android:fromYScale=&quot;1.15&quot;&#10;    android:toYScale=&quot;1.0&quot;&#10;    android:pivotX=&quot;50%&quot;&#10;    android:pivotY=&quot;50%&quot;&#10;    android:duration=&quot;300&quot;&#10;    android:interpolator=&quot;@android:anim/decelerate_interpolator&quot; /&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/anim/zoom_out_back.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/anim/zoom_out_back.xml" />
              <option name="originalContent" value="&#10;&#10;" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;scale xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    android:fromXScale=&quot;1.0&quot;&#10;    android:toXScale=&quot;1.15&quot;&#10;    android:fromYScale=&quot;1.0&quot;&#10;    android:toYScale=&quot;1.15&quot;&#10;    android:pivotX=&quot;50%&quot;&#10;    android:pivotY=&quot;50%&quot;&#10;    android:duration=&quot;300&quot;&#10;    android:interpolator=&quot;@android:anim/accelerate_interpolator&quot; /&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/anim/zoom_out_fade.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/anim/zoom_out_fade.xml" />
              <option name="originalContent" value="&#10;&#10;&#10;" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;scale xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    android:fromXScale=&quot;1.0&quot;&#10;    android:toXScale=&quot;0.85&quot;&#10;    android:fromYScale=&quot;1.0&quot;&#10;    android:toYScale=&quot;0.85&quot;&#10;    android:pivotX=&quot;50%&quot;&#10;    android:pivotY=&quot;50%&quot;&#10;    android:duration=&quot;300&quot;&#10;    android:interpolator=&quot;@android:anim/accelerate_interpolator&quot; /&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/drawable/card_disabled_background.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/drawable/card_disabled_background.xml" />
              <option name="originalContent" value="&#10;&#10;&#10;&#10;" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;shape xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&gt;&#10;    &lt;solid android:color=&quot;#6B7280&quot; /&gt;&#10;    &lt;corners android:radius=&quot;24dp&quot; /&gt;&#10;    &lt;stroke &#10;        android:width=&quot;2dp&quot; &#10;        android:color=&quot;#4B5563&quot; /&gt;&#10;&lt;/shape&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/drawable/card_enhanced_shadow_background.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/drawable/card_enhanced_shadow_background.xml" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;layer-list xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&gt;&#10;    &lt;!-- Shadow layer --&gt;&#10;    &lt;item android:top=&quot;4dp&quot; android:left=&quot;2dp&quot; android:right=&quot;6dp&quot; android:bottom=&quot;8dp&quot;&gt;&#10;        &lt;shape&gt;&#10;            &lt;solid android:color=&quot;#1A000000&quot; /&gt;&#10;            &lt;corners android:radius=&quot;24dp&quot; /&gt;&#10;        &lt;/shape&gt;&#10;    &lt;/item&gt;&#10;    &lt;!-- Card background --&gt;&#10;    &lt;item android:top=&quot;0dp&quot; android:left=&quot;0dp&quot; android:right=&quot;4dp&quot; android:bottom=&quot;4dp&quot;&gt;&#10;        &lt;shape&gt;&#10;            &lt;solid android:color=&quot;#FFFFFF&quot; /&gt;&#10;            &lt;corners android:radius=&quot;24dp&quot; /&gt;&#10;            &lt;stroke&#10;                android:width=&quot;1dp&quot;&#10;                android:color=&quot;#E5E7EB&quot; /&gt;&#10;        &lt;/shape&gt;&#10;    &lt;/item&gt;&#10;&lt;/layer-list&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/drawable/card_gradient_background.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/drawable/card_gradient_background.xml" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;shape xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&gt;&#10;    &lt;gradient&#10;        android:startColor=&quot;#FFFFFF&quot;&#10;        android:endColor=&quot;#F8FAFF&quot;&#10;        android:angle=&quot;135&quot; /&gt;&#10;    &lt;corners android:radius=&quot;24dp&quot; /&gt;&#10;    &lt;stroke&#10;        android:width=&quot;2dp&quot;&#10;        android:color=&quot;#E1E5F0&quot; /&gt;&#10;&lt;/shape&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/drawable/card_white_background.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/drawable/card_white_background.xml" />
              <option name="originalContent" value="&#10;&#10;" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;shape xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&gt;&#10;    &lt;solid android:color=&quot;#F8FAFC&quot; /&gt;&#10;    &lt;corners android:radius=&quot;24dp&quot; /&gt;&#10;    &lt;stroke&#10;        android:width=&quot;2dp&quot;&#10;        android:color=&quot;#E2E8F0&quot; /&gt;&#10;&lt;/shape&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/drawable/coming_soon_rounded_background.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/drawable/coming_soon_rounded_background.xml" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;shape xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&gt;&#10;    &lt;solid android:color=&quot;#80FFFFFF&quot; /&gt;&#10;    &lt;corners android:radius=&quot;16dp&quot; /&gt;&#10;&lt;/shape&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/drawable/ic_pin_code.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/drawable/ic_pin_code.xml" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;vector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    android:width=&quot;24dp&quot;&#10;    android:height=&quot;24dp&quot;&#10;    android:viewportWidth=&quot;24&quot;&#10;    android:viewportHeight=&quot;24&quot;&gt;&#10;    &lt;path&#10;        android:fillColor=&quot;#FF000000&quot;&#10;        android:pathData=&quot;M12,1L3,5V11C3,16.55 6.84,21.74 12,23C17.16,21.74 21,16.55 21,11V5L12,1M12,7C13.4,7 14.8,8.6 14.8,10V11H16.2V16H7.8V11H9.2V10C9.2,8.6 10.6,7 12,7M12,8.2C11.2,8.2 10.4,8.7 10.4,10V11H13.6V10C13.6,8.7 12.8,8.2 12,8.2Z&quot;/&gt;&#10;&lt;/vector&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/drawable/overlay_rounded_background.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/drawable/overlay_rounded_background.xml" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;shape xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&gt;&#10;    &lt;solid android:color=&quot;#AA000000&quot; /&gt;&#10;    &lt;corners android:radius=&quot;24dp&quot; /&gt;&#10;&lt;/shape&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/layout/activity_main.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/layout/activity_main.xml" />
              <option name="originalContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;FrameLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;&#10;    android:layout_width=&quot;match_parent&quot;&#10;    android:layout_height=&quot;match_parent&quot;&#10;    android:background=&quot;@drawable/gradient_background_main&quot;&gt;&#10;&#10;    &lt;LinearLayout&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;match_parent&quot;&#10;        android:orientation=&quot;vertical&quot;&#10;        android:padding=&quot;80dp&quot;&#10;        android:gravity=&quot;center&quot;&gt;&#10;&#10;        &lt;!-- Centered Logo and Wordmark Vertically --&gt;&#10;        &lt;LinearLayout&#10;            android:layout_width=&quot;wrap_content&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:orientation=&quot;vertical&quot;&#10;            android:gravity=&quot;center&quot;&gt;&#10;&#10;            &lt;!-- Much Bigger Centered Logo --&gt;&#10;            &lt;ImageView&#10;                android:layout_width=&quot;500dp&quot;&#10;                android:layout_height=&quot;500dp&quot;&#10;                android:src=&quot;@drawable/logo&quot;&#10;                android:contentDescription=&quot;WaterFountain logo&quot;&#10;                android:scaleType=&quot;fitCenter&quot;&#10;                android:layout_marginBottom=&quot;60dp&quot;/&gt;&#10;&#10;            &lt;!-- Much Bigger Wordmark Below Logo --&gt;&#10;            &lt;ImageView&#10;                android:layout_width=&quot;800dp&quot;&#10;                android:layout_height=&quot;160dp&quot;&#10;                android:src=&quot;@drawable/white_word_mark&quot;&#10;                android:contentDescription=&quot;WaterFountain wordmark&quot;&#10;                android:scaleType=&quot;fitCenter&quot;&#10;                android:adjustViewBounds=&quot;true&quot;&#10;                android:layout_marginBottom=&quot;20dp&quot;/&gt;&#10;&#10;            &lt;!-- Tagline under wordmark --&gt;&#10;            &lt;TextView&#10;                android:layout_width=&quot;wrap_content&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:text=&quot;Always free from our fountains&quot;&#10;                android:textSize=&quot;36sp&quot;&#10;                android:textColor=&quot;#B3FFFFFF&quot;&#10;                android:fontFamily=&quot;sans-serif-light&quot;&#10;                android:gravity=&quot;center&quot;&#10;                android:layout_marginBottom=&quot;40dp&quot;/&gt;&#10;&#10;            &lt;!-- Bigger instruction text --&gt;&#10;            &lt;TextView&#10;                android:layout_width=&quot;wrap_content&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:text=&quot;Press anywhere to start&quot;&#10;                android:textSize=&quot;48sp&quot;&#10;                android:textColor=&quot;#80FFFFFF&quot;&#10;                android:fontFamily=&quot;sans-serif-light&quot;&#10;                android:gravity=&quot;center&quot;/&gt;&#10;&#10;        &lt;/LinearLayout&gt;&#10;&#10;    &lt;/LinearLayout&gt;&#10;&#10;    &lt;!-- Bottom Info Section with Question Mark --&gt;&#10;    &lt;LinearLayout&#10;        android:layout_width=&quot;wrap_content&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:layout_gravity=&quot;bottom|center_horizontal&quot;&#10;        android:layout_marginBottom=&quot;60dp&quot;&#10;        android:orientation=&quot;horizontal&quot;&#10;        android:gravity=&quot;center_vertical&quot;&gt;&#10;&#10;        &lt;!-- Question Mark Icon in Circle --&gt;&#10;        &lt;FrameLayout&#10;            android:id=&quot;@+id/questionMarkButton&quot;&#10;            android:layout_width=&quot;48dp&quot;&#10;            android:layout_height=&quot;48dp&quot;&#10;            android:background=&quot;@drawable/circle_background&quot;&#10;            android:layout_marginEnd=&quot;16dp&quot;&#10;            android:clickable=&quot;true&quot;&#10;            android:focusable=&quot;true&quot;&gt;&#10;&#10;            &lt;TextView&#10;                android:id=&quot;@+id/questionMarkIcon&quot;&#10;                android:layout_width=&quot;wrap_content&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:layout_gravity=&quot;center&quot;&#10;                android:text=&quot;?&quot;&#10;                android:textSize=&quot;24sp&quot;&#10;                android:textColor=&quot;@android:color/white&quot;&#10;                android:fontFamily=&quot;sans-serif-medium&quot;/&gt;&#10;&#10;        &lt;/FrameLayout&gt;&#10;&#10;        &lt;!-- &quot;Powered by local businesses&quot; text --&gt;&#10;        &lt;TextView&#10;            android:layout_width=&quot;wrap_content&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:text=&quot;Powered by local businesses&quot;&#10;            android:textSize=&quot;28sp&quot;&#10;            android:textColor=&quot;#80FFFFFF&quot;&#10;            android:fontFamily=&quot;sans-serif-light&quot;/&gt;&#10;&#10;    &lt;/LinearLayout&gt;&#10;&#10;    &lt;!-- Modal Overlay (initially hidden) --&gt;&#10;    &lt;FrameLayout&#10;        android:id=&quot;@+id/modalOverlay&quot;&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;match_parent&quot;&#10;        android:background=&quot;#80000000&quot;&#10;        android:visibility=&quot;gone&quot;&#10;        android:clickable=&quot;true&quot;&gt;&#10;&#10;        &lt;!-- Modal Content --&gt;&#10;        &lt;LinearLayout&#10;            android:id=&quot;@+id/modalContent&quot;&#10;            android:layout_width=&quot;800dp&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:layout_gravity=&quot;center&quot;&#10;            android:background=&quot;@drawable/modal_background&quot;&#10;            android:orientation=&quot;vertical&quot;&#10;            android:padding=&quot;60dp&quot;&#10;            android:gravity=&quot;center&quot;&gt;&#10;&#10;            &lt;!-- Modal Title --&gt;&#10;            &lt;TextView&#10;                android:layout_width=&quot;wrap_content&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:text=&quot;Why is this free?&quot;&#10;                android:textSize=&quot;42sp&quot;&#10;                android:textColor=&quot;@android:color/white&quot;&#10;                android:fontFamily=&quot;sans-serif-medium&quot;&#10;                android:gravity=&quot;center&quot;&#10;                android:layout_marginBottom=&quot;30dp&quot;/&gt;&#10;&#10;            &lt;!-- Modal Message --&gt;&#10;            &lt;TextView&#10;                android:layout_width=&quot;wrap_content&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:text=&quot;Our spring water is completely free. Nature doesn't charge, so neither do we. Instead, we partner with local businesses who cover the cost to keep you hydrated.\n\nGet one every single day with your phone number&quot;&#10;                android:textSize=&quot;32sp&quot;&#10;                android:textColor=&quot;#E0FFFFFF&quot;&#10;                android:fontFamily=&quot;sans-serif-light&quot;&#10;                android:gravity=&quot;center&quot;&#10;                android:lineSpacingExtra=&quot;8dp&quot;&#10;                android:layout_marginBottom=&quot;40dp&quot;/&gt;&#10;&#10;            &lt;!-- Close Button --&gt;&#10;            &lt;TextView&#10;                android:id=&quot;@+id/closeModalButton&quot;&#10;                android:layout_width=&quot;wrap_content&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:text=&quot;Got it!&quot;&#10;                android:textSize=&quot;36sp&quot;&#10;                android:textColor=&quot;@android:color/white&quot;&#10;                android:fontFamily=&quot;sans-serif-medium&quot;&#10;                android:background=&quot;@drawable/button_background&quot;&#10;                android:paddingHorizontal=&quot;40dp&quot;&#10;                android:paddingVertical=&quot;16dp&quot;&#10;                android:clickable=&quot;true&quot;&#10;                android:focusable=&quot;true&quot;&#10;                android:gravity=&quot;center&quot;/&gt;&#10;&#10;        &lt;/LinearLayout&gt;&#10;&#10;    &lt;/FrameLayout&gt;&#10;&#10;&lt;/FrameLayout&gt;" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;FrameLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;&#10;    android:layout_width=&quot;match_parent&quot;&#10;    android:layout_height=&quot;match_parent&quot;&#10;    android:background=&quot;@drawable/gradient_background_main&quot;&gt;&#10;&#10;    &lt;LinearLayout&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;match_parent&quot;&#10;        android:orientation=&quot;vertical&quot;&#10;        android:padding=&quot;80dp&quot;&#10;        android:gravity=&quot;center&quot;&gt;&#10;&#10;        &lt;!-- Centered Logo and Wordmark Vertically --&gt;&#10;        &lt;LinearLayout&#10;            android:id=&quot;@+id/mainContent&quot;&#10;            android:layout_width=&quot;wrap_content&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:orientation=&quot;vertical&quot;&#10;            android:gravity=&quot;center&quot;&gt;&#10;&#10;            &lt;!-- Much Bigger Centered Logo --&gt;&#10;            &lt;ImageView&#10;                android:layout_width=&quot;500dp&quot;&#10;                android:layout_height=&quot;500dp&quot;&#10;                android:src=&quot;@drawable/logo&quot;&#10;                android:contentDescription=&quot;WaterFountain logo&quot;&#10;                android:scaleType=&quot;fitCenter&quot;&#10;                android:layout_marginBottom=&quot;60dp&quot;/&gt;&#10;&#10;            &lt;!-- Much Bigger Wordmark Below Logo --&gt;&#10;            &lt;ImageView&#10;                android:layout_width=&quot;800dp&quot;&#10;                android:layout_height=&quot;160dp&quot;&#10;                android:src=&quot;@drawable/white_word_mark&quot;&#10;                android:contentDescription=&quot;WaterFountain wordmark&quot;&#10;                android:scaleType=&quot;fitCenter&quot;&#10;                android:adjustViewBounds=&quot;true&quot;&#10;                android:layout_marginBottom=&quot;20dp&quot;/&gt;&#10;&#10;            &lt;!-- Tagline under wordmark --&gt;&#10;            &lt;TextView&#10;                android:layout_width=&quot;wrap_content&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:text=&quot;Always free from our fountains&quot;&#10;                android:textSize=&quot;56sp&quot;&#10;                android:textColor=&quot;#B3FFFFFF&quot;&#10;                android:fontFamily=&quot;sans-serif-light&quot;&#10;                android:gravity=&quot;center&quot;&#10;                android:layout_marginBottom=&quot;50dp&quot;/&gt;&#10;&#10;            &lt;!-- Bigger instruction text with breathing animation --&gt;&#10;            &lt;TextView&#10;                android:id=&quot;@+id/instructionText&quot;&#10;                android:layout_width=&quot;wrap_content&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:text=&quot;Press anywhere to start&quot;&#10;                android:textSize=&quot;68sp&quot;&#10;                android:textColor=&quot;#FFFFFF&quot;&#10;                android:fontFamily=&quot;sans-serif-medium&quot;&#10;                android:gravity=&quot;center&quot;&#10;                android:letterSpacing=&quot;0.02&quot;&#10;                android:elevation=&quot;4dp&quot;/&gt;&#10;&#10;        &lt;/LinearLayout&gt;&#10;&#10;    &lt;/LinearLayout&gt;&#10;&#10;    &lt;!-- Bottom Info Section with Question Mark --&gt;&#10;    &lt;LinearLayout&#10;        android:layout_width=&quot;wrap_content&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:layout_gravity=&quot;bottom|center_horizontal&quot;&#10;        android:layout_marginBottom=&quot;80dp&quot;&#10;        android:orientation=&quot;horizontal&quot;&#10;        android:gravity=&quot;center_vertical&quot;&#10;        android:padding=&quot;20dp&quot;&gt;&#10;&#10;        &lt;!-- Question Mark Icon in Circle with extra space to prevent clipping --&gt;&#10;        &lt;FrameLayout&#10;            android:id=&quot;@+id/questionMarkButton&quot;&#10;            android:layout_width=&quot;120dp&quot;&#10;            android:layout_height=&quot;120dp&quot;&#10;            android:layout_marginEnd=&quot;20dp&quot;&#10;            android:clickable=&quot;true&quot;&#10;            android:focusable=&quot;true&quot;&#10;            android:elevation=&quot;6dp&quot;&gt;&#10;&#10;            &lt;!-- Circular background centered within the larger frame --&gt;&#10;            &lt;View&#10;                android:layout_width=&quot;80dp&quot;&#10;                android:layout_height=&quot;80dp&quot;&#10;                android:layout_gravity=&quot;center&quot;&#10;                android:background=&quot;@drawable/circle_background&quot;/&gt;&#10;&#10;            &lt;TextView&#10;                android:id=&quot;@+id/questionMarkIcon&quot;&#10;                android:layout_width=&quot;wrap_content&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:layout_gravity=&quot;center&quot;&#10;                android:text=&quot;?&quot;&#10;                android:textSize=&quot;44sp&quot;&#10;                android:textColor=&quot;@android:color/white&quot;&#10;                android:fontFamily=&quot;sans-serif-medium&quot;/&gt;&#10;&#10;        &lt;/FrameLayout&gt;&#10;&#10;        &lt;!-- &quot;Powered by local businesses&quot; text --&gt;&#10;        &lt;TextView&#10;            android:layout_width=&quot;wrap_content&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:text=&quot;Powered by local businesses&quot;&#10;            android:textSize=&quot;44sp&quot;&#10;            android:textColor=&quot;#B3FFFFFF&quot;&#10;            android:fontFamily=&quot;sans-serif-light&quot;/&gt;&#10;&#10;    &lt;/LinearLayout&gt;&#10;&#10;    &lt;!-- Modal Overlay (initially hidden) --&gt;&#10;    &lt;FrameLayout&#10;        android:id=&quot;@+id/modalOverlay&quot;&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;match_parent&quot;&#10;        android:background=&quot;#80000000&quot;&#10;        android:visibility=&quot;gone&quot;&#10;        android:clickable=&quot;true&quot;&gt;&#10;&#10;        &lt;!-- Modal Content --&gt;&#10;        &lt;LinearLayout&#10;            android:id=&quot;@+id/modalContent&quot;&#10;            android:layout_width=&quot;800dp&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:layout_gravity=&quot;center&quot;&#10;            android:background=&quot;@drawable/modal_background&quot;&#10;            android:orientation=&quot;vertical&quot;&#10;            android:padding=&quot;60dp&quot;&#10;            android:gravity=&quot;center&quot;&gt;&#10;&#10;            &lt;!-- Modal Title --&gt;&#10;            &lt;TextView&#10;                android:layout_width=&quot;wrap_content&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:text=&quot;Why is this free?&quot;&#10;                android:textSize=&quot;42sp&quot;&#10;                android:textColor=&quot;@android:color/white&quot;&#10;                android:fontFamily=&quot;sans-serif-medium&quot;&#10;                android:gravity=&quot;center&quot;&#10;                android:layout_marginBottom=&quot;30dp&quot;/&gt;&#10;&#10;            &lt;!-- Modal Message --&gt;&#10;            &lt;TextView&#10;                android:layout_width=&quot;wrap_content&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:text=&quot;Our spring water is completely free. Nature doesn't charge, so neither do we. Instead, we partner with local businesses who cover the cost to keep you hydrated.\n\nGet one every single day with your phone number&quot;&#10;                android:textSize=&quot;32sp&quot;&#10;                android:textColor=&quot;#E0FFFFFF&quot;&#10;                android:fontFamily=&quot;sans-serif-light&quot;&#10;                android:gravity=&quot;center&quot;&#10;                android:lineSpacingExtra=&quot;8dp&quot;&#10;                android:layout_marginBottom=&quot;40dp&quot;/&gt;&#10;&#10;            &lt;!-- Close Button --&gt;&#10;            &lt;TextView&#10;                android:id=&quot;@+id/closeModalButton&quot;&#10;                android:layout_width=&quot;wrap_content&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:text=&quot;Got it!&quot;&#10;                android:textSize=&quot;36sp&quot;&#10;                android:textColor=&quot;@android:color/white&quot;&#10;                android:fontFamily=&quot;sans-serif-medium&quot;&#10;                android:background=&quot;@drawable/button_background&quot;&#10;                android:paddingHorizontal=&quot;40dp&quot;&#10;                android:paddingVertical=&quot;16dp&quot;&#10;                android:clickable=&quot;true&quot;&#10;                android:focusable=&quot;true&quot;&#10;                android:gravity=&quot;center&quot;/&gt;&#10;&#10;        &lt;/LinearLayout&gt;&#10;&#10;    &lt;/FrameLayout&gt;&#10;&#10;&lt;/FrameLayout&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/layout/activity_pin.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/layout/activity_pin.xml" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;FrameLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;&#10;    android:layout_width=&quot;match_parent&quot;&#10;    android:layout_height=&quot;match_parent&quot;&#10;    android:background=&quot;@drawable/gradient_background_main&quot;&gt;&#10;&#10;    &lt;LinearLayout&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;match_parent&quot;&#10;        android:orientation=&quot;vertical&quot;&#10;        android:padding=&quot;80dp&quot;&#10;        android:gravity=&quot;center&quot;&gt;&#10;&#10;        &lt;!-- Header with Back Button and Centered Logo/Wordmark --&gt;&#10;        &lt;LinearLayout&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;140dp&quot;&#10;            android:gravity=&quot;center_vertical&quot;&#10;            android:layout_marginBottom=&quot;80dp&quot;&gt;&#10;&#10;            &lt;!-- Back Button --&gt;&#10;            &lt;FrameLayout&#10;                android:layout_width=&quot;140dp&quot;&#10;                android:layout_height=&quot;match_parent&quot;&#10;                android:gravity=&quot;center_vertical&quot;&gt;&#10;&#10;                &lt;ImageButton&#10;                    android:id=&quot;@+id/backButton&quot;&#10;                    android:layout_width=&quot;120dp&quot;&#10;                    android:layout_height=&quot;120dp&quot;&#10;                    android:background=&quot;?android:attr/selectableItemBackgroundBorderless&quot;&#10;                    android:contentDescription=&quot;@string/back_button&quot;&#10;                    android:src=&quot;@drawable/ic_arrow_back&quot;&#10;                    android:alpha=&quot;0.9&quot;&#10;                    android:padding=&quot;20dp&quot;&#10;                    android:scaleType=&quot;fitCenter&quot;&#10;                    app:tint=&quot;@android:color/white&quot; /&gt;&#10;&#10;            &lt;/FrameLayout&gt;&#10;&#10;            &lt;!-- Centered Logo and Wordmark --&gt;&#10;            &lt;LinearLayout&#10;                android:layout_width=&quot;0dp&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:layout_weight=&quot;1&quot;&#10;                android:gravity=&quot;center&quot;&#10;                android:orientation=&quot;horizontal&quot;&gt;&#10;&#10;                &lt;ImageView&#10;                    android:layout_width=&quot;140dp&quot;&#10;                    android:layout_height=&quot;140dp&quot;&#10;                    android:layout_marginEnd=&quot;30dp&quot;&#10;                    android:src=&quot;@drawable/logo&quot;&#10;                    android:contentDescription=&quot;@string/waterfountain_logo&quot;&#10;                    android:scaleType=&quot;fitCenter&quot; /&gt;&#10;&#10;                &lt;ImageView&#10;                    android:layout_width=&quot;400dp&quot;&#10;                    android:layout_height=&quot;80dp&quot;&#10;                    android:src=&quot;@drawable/white_word_mark&quot;&#10;                    android:contentDescription=&quot;@string/waterfountain_wordmark&quot;&#10;                    android:scaleType=&quot;fitCenter&quot;&#10;                    android:adjustViewBounds=&quot;true&quot;/&gt;&#10;&#10;            &lt;/LinearLayout&gt;&#10;&#10;            &lt;!-- Empty space to balance the back button --&gt;&#10;            &lt;View&#10;                android:layout_width=&quot;140dp&quot;&#10;                android:layout_height=&quot;match_parent&quot; /&gt;&#10;&#10;        &lt;/LinearLayout&gt;&#10;&#10;        &lt;!-- Main Content Area --&gt;&#10;        &lt;LinearLayout&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;0dp&quot;&#10;            android:layout_weight=&quot;1&quot;&#10;            android:orientation=&quot;vertical&quot;&#10;            android:gravity=&quot;center&quot;&gt;&#10;&#10;            &lt;!-- Title --&gt;&#10;            &lt;TextView&#10;                android:layout_width=&quot;wrap_content&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:text=&quot;PIN Code Verification&quot;&#10;                android:textSize=&quot;72sp&quot;&#10;                android:textColor=&quot;@android:color/white&quot;&#10;                android:fontFamily=&quot;sans-serif-medium&quot;&#10;                android:gravity=&quot;center&quot;&#10;                android:layout_marginBottom=&quot;60dp&quot;/&gt;&#10;&#10;            &lt;!-- Subtitle --&gt;&#10;            &lt;TextView&#10;                android:layout_width=&quot;wrap_content&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:text=&quot;Enter your PIN from the mobile app&quot;&#10;                android:textSize=&quot;48sp&quot;&#10;                android:textColor=&quot;#B3FFFFFF&quot;&#10;                android:fontFamily=&quot;sans-serif-light&quot;&#10;                android:gravity=&quot;center&quot;&#10;                android:layout_marginBottom=&quot;80dp&quot;/&gt;&#10;&#10;            &lt;!-- PIN Input Section --&gt;&#10;            &lt;LinearLayout&#10;                android:layout_width=&quot;wrap_content&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:orientation=&quot;vertical&quot;&#10;                android:gravity=&quot;center&quot;&gt;&#10;&#10;                &lt;!-- PIN Display --&gt;&#10;                &lt;LinearLayout&#10;                    android:layout_width=&quot;wrap_content&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:orientation=&quot;horizontal&quot;&#10;                    android:gravity=&quot;center&quot;&#10;                    android:layout_marginBottom=&quot;60dp&quot;&gt;&#10;&#10;                    &lt;TextView&#10;                        android:id=&quot;@+id/pinDot1&quot;&#10;                        android:layout_width=&quot;80dp&quot;&#10;                        android:layout_height=&quot;80dp&quot;&#10;                        android:background=&quot;@drawable/circle_background&quot;&#10;                        android:gravity=&quot;center&quot;&#10;                        android:textSize=&quot;40sp&quot;&#10;                        android:textColor=&quot;@android:color/white&quot;&#10;                        android:layout_marginHorizontal=&quot;20dp&quot;/&gt;&#10;&#10;                    &lt;TextView&#10;                        android:id=&quot;@+id/pinDot2&quot;&#10;                        android:layout_width=&quot;80dp&quot;&#10;                        android:layout_height=&quot;80dp&quot;&#10;                        android:background=&quot;@drawable/circle_background&quot;&#10;                        android:gravity=&quot;center&quot;&#10;                        android:textSize=&quot;40sp&quot;&#10;                        android:textColor=&quot;@android:color/white&quot;&#10;                        android:layout_marginHorizontal=&quot;20dp&quot;/&gt;&#10;&#10;                    &lt;TextView&#10;                        android:id=&quot;@+id/pinDot3&quot;&#10;                        android:layout_width=&quot;80dp&quot;&#10;                        android:layout_height=&quot;80dp&quot;&#10;                        android:background=&quot;@drawable/circle_background&quot;&#10;                        android:gravity=&quot;center&quot;&#10;                        android:textSize=&quot;40sp&quot;&#10;                        android:textColor=&quot;@android:color/white&quot;&#10;                        android:layout_marginHorizontal=&quot;20dp&quot;/&gt;&#10;&#10;                    &lt;TextView&#10;                        android:id=&quot;@+id/pinDot4&quot;&#10;                        android:layout_width=&quot;80dp&quot;&#10;                        android:layout_height=&quot;80dp&quot;&#10;                        android:background=&quot;@drawable/circle_background&quot;&#10;                        android:gravity=&quot;center&quot;&#10;                        android:textSize=&quot;40sp&quot;&#10;                        android:textColor=&quot;@android:color/white&quot;&#10;                        android:layout_marginHorizontal=&quot;20dp&quot;/&gt;&#10;&#10;                &lt;/LinearLayout&gt;&#10;&#10;                &lt;!-- Temporary Coming Soon Message --&gt;&#10;                &lt;TextView&#10;                    android:layout_width=&quot;wrap_content&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:text=&quot;Coming Soon\nThis feature will be available with the mobile app&quot;&#10;                    android:textSize=&quot;36sp&quot;&#10;                    android:textColor=&quot;#B3FFFFFF&quot;&#10;                    android:fontFamily=&quot;sans-serif-light&quot;&#10;                    android:gravity=&quot;center&quot;&#10;                    android:lineSpacingExtra=&quot;8dp&quot;/&gt;&#10;&#10;            &lt;/LinearLayout&gt;&#10;&#10;        &lt;/LinearLayout&gt;&#10;&#10;    &lt;/LinearLayout&gt;&#10;&#10;&lt;/FrameLayout&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/layout/activity_vending.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/layout/activity_vending.xml" />
              <option name="originalContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;FrameLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;&#10;    android:layout_width=&quot;match_parent&quot;&#10;    android:layout_height=&quot;match_parent&quot;&#10;    android:background=&quot;@drawable/gradient_background_main&quot;&gt;&#10;&#10;    &lt;LinearLayout&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;match_parent&quot;&#10;        android:orientation=&quot;vertical&quot;&#10;        android:padding=&quot;80dp&quot;&#10;        android:gravity=&quot;center&quot;&gt;&#10;&#10;        &lt;!-- Header with Back Button and Centered Logo/Wordmark --&gt;&#10;        &lt;LinearLayout&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;100dp&quot;&#10;            android:gravity=&quot;center_vertical&quot;&#10;            android:layout_marginBottom=&quot;60dp&quot;&gt;&#10;&#10;            &lt;ImageButton&#10;                android:id=&quot;@+id/backButton&quot;&#10;                android:layout_width=&quot;80dp&quot;&#10;                android:layout_height=&quot;80dp&quot;&#10;                android:background=&quot;?android:attr/selectableItemBackgroundBorderless&quot;&#10;                android:contentDescription=&quot;@string/back_button&quot;&#10;                android:src=&quot;@drawable/ic_arrow_back&quot;&#10;                android:alpha=&quot;0.9&quot;&#10;                app:tint=&quot;@android:color/white&quot; /&gt;&#10;&#10;            &lt;View&#10;                android:layout_width=&quot;0dp&quot;&#10;                android:layout_height=&quot;1dp&quot;&#10;                android:layout_weight=&quot;1&quot; /&gt;&#10;&#10;            &lt;!-- Centered Logo and Wordmark --&gt;&#10;            &lt;LinearLayout&#10;                android:layout_width=&quot;wrap_content&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:gravity=&quot;center_vertical&quot;&#10;                android:orientation=&quot;horizontal&quot;&gt;&#10;&#10;                &lt;ImageView&#10;                    android:layout_width=&quot;100dp&quot;&#10;                    android:layout_height=&quot;100dp&quot;&#10;                    android:layout_marginEnd=&quot;20dp&quot;&#10;                    android:src=&quot;@drawable/logo&quot;&#10;                    android:contentDescription=&quot;@string/waterfountain_logo&quot;&#10;                    android:scaleType=&quot;fitCenter&quot; /&gt;&#10;&#10;                &lt;ImageView&#10;                    android:layout_width=&quot;280dp&quot;&#10;                    android:layout_height=&quot;56dp&quot;&#10;                    android:src=&quot;@drawable/white_word_mark&quot;&#10;                    android:contentDescription=&quot;@string/waterfountain_wordmark&quot;&#10;                    android:scaleType=&quot;fitCenter&quot;&#10;                    android:adjustViewBounds=&quot;true&quot;/&gt;&#10;&#10;            &lt;/LinearLayout&gt;&#10;&#10;            &lt;View&#10;                android:layout_width=&quot;0dp&quot;&#10;                android:layout_height=&quot;1dp&quot;&#10;                android:layout_weight=&quot;1&quot; /&gt;&#10;&#10;        &lt;/LinearLayout&gt;&#10;&#10;        &lt;!-- Main Content Area --&gt;&#10;        &lt;LinearLayout&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;0dp&quot;&#10;            android:layout_weight=&quot;1&quot;&#10;            android:orientation=&quot;vertical&quot;&#10;            android:gravity=&quot;center&quot;&gt;&#10;&#10;            &lt;!-- Water Drop Icon --&gt;&#10;            &lt;ImageView&#10;                android:layout_width=&quot;200dp&quot;&#10;                android:layout_height=&quot;200dp&quot;&#10;                android:src=&quot;@drawable/ic_water_drop&quot;&#10;                app:tint=&quot;@android:color/white&quot;&#10;                android:contentDescription=&quot;Water drop icon&quot;&#10;                android:layout_marginBottom=&quot;60dp&quot;&#10;                android:alpha=&quot;0.9&quot;/&gt;&#10;&#10;            &lt;!-- Title --&gt;&#10;            &lt;TextView&#10;                android:id=&quot;@+id/titleText&quot;&#10;                android:layout_width=&quot;wrap_content&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:text=&quot;Get Your Water&quot;&#10;                android:textSize=&quot;56sp&quot;&#10;                android:textColor=&quot;@android:color/white&quot;&#10;                android:fontFamily=&quot;sans-serif-medium&quot;&#10;                android:gravity=&quot;center&quot;&#10;                android:layout_marginBottom=&quot;30dp&quot;/&gt;&#10;&#10;            &lt;!-- Subtitle --&gt;&#10;            &lt;TextView&#10;                android:id=&quot;@+id/subtitleText&quot;&#10;                android:layout_width=&quot;wrap_content&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:text=&quot;Choose your verification method&quot;&#10;                android:textSize=&quot;36sp&quot;&#10;                android:textColor=&quot;#B3FFFFFF&quot;&#10;                android:fontFamily=&quot;sans-serif-light&quot;&#10;                android:gravity=&quot;center&quot;&#10;                android:layout_marginBottom=&quot;80dp&quot;/&gt;&#10;&#10;            &lt;!-- Option Cards --&gt;&#10;            &lt;LinearLayout&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:orientation=&quot;horizontal&quot;&#10;                android:gravity=&quot;center&quot;&#10;                android:layout_marginHorizontal=&quot;40dp&quot;&gt;&#10;&#10;                &lt;!-- QR Code Option --&gt;&#10;                &lt;LinearLayout&#10;                    android:id=&quot;@+id/qrCodeCard&quot;&#10;                    android:layout_width=&quot;0dp&quot;&#10;                    android:layout_height=&quot;400dp&quot;&#10;                    android:layout_weight=&quot;1&quot;&#10;                    android:orientation=&quot;vertical&quot;&#10;                    android:gravity=&quot;center&quot;&#10;                    android:background=&quot;@drawable/card_gradient_qr&quot;&#10;                    android:layout_marginEnd=&quot;30dp&quot;&#10;                    android:padding=&quot;40dp&quot;&#10;                    android:clickable=&quot;true&quot;&#10;                    android:focusable=&quot;true&quot;&gt;&#10;&#10;                    &lt;ImageView&#10;                        android:layout_width=&quot;120dp&quot;&#10;                        android:layout_height=&quot;120dp&quot;&#10;                        android:src=&quot;@drawable/ic_qr_code&quot;&#10;                        app:tint=&quot;@android:color/white&quot;&#10;                        android:contentDescription=&quot;QR Code icon&quot;&#10;                        android:layout_marginBottom=&quot;30dp&quot;&#10;                        android:alpha=&quot;0.9&quot;/&gt;&#10;&#10;                    &lt;TextView&#10;                        android:layout_width=&quot;wrap_content&quot;&#10;                        android:layout_height=&quot;wrap_content&quot;&#10;                        android:text=&quot;Scan QR Code&quot;&#10;                        android:textSize=&quot;32sp&quot;&#10;                        android:textColor=&quot;@android:color/white&quot;&#10;                        android:fontFamily=&quot;sans-serif-medium&quot;&#10;                        android:gravity=&quot;center&quot;&#10;                        android:layout_marginBottom=&quot;20dp&quot;/&gt;&#10;&#10;                    &lt;TextView&#10;                        android:layout_width=&quot;wrap_content&quot;&#10;                        android:layout_height=&quot;wrap_content&quot;&#10;                        android:text=&quot;Quick and contactless&quot;&#10;                        android:textSize=&quot;22sp&quot;&#10;                        android:textColor=&quot;#B3FFFFFF&quot;&#10;                        android:fontFamily=&quot;sans-serif-light&quot;&#10;                        android:gravity=&quot;center&quot;/&gt;&#10;&#10;                &lt;/LinearLayout&gt;&#10;&#10;                &lt;!-- SMS Option --&gt;&#10;                &lt;LinearLayout&#10;                    android:id=&quot;@+id/smsCard&quot;&#10;                    android:layout_width=&quot;0dp&quot;&#10;                    android:layout_height=&quot;400dp&quot;&#10;                    android:layout_weight=&quot;1&quot;&#10;                    android:orientation=&quot;vertical&quot;&#10;                    android:gravity=&quot;center&quot;&#10;                    android:background=&quot;@drawable/card_gradient_sms&quot;&#10;                    android:layout_marginStart=&quot;30dp&quot;&#10;                    android:padding=&quot;40dp&quot;&#10;                    android:clickable=&quot;true&quot;&#10;                    android:focusable=&quot;true&quot;&gt;&#10;&#10;                    &lt;ImageView&#10;                        android:layout_width=&quot;120dp&quot;&#10;                        android:layout_height=&quot;120dp&quot;&#10;                        android:src=&quot;@drawable/ic_phone_elegant&quot;&#10;                        app:tint=&quot;@android:color/white&quot;&#10;                        android:contentDescription=&quot;Phone icon&quot;&#10;                        android:layout_marginBottom=&quot;30dp&quot;&#10;                        android:alpha=&quot;0.9&quot;/&gt;&#10;&#10;                    &lt;TextView&#10;                        android:layout_width=&quot;wrap_content&quot;&#10;                        android:layout_height=&quot;wrap_content&quot;&#10;                        android:text=&quot;Phone Number&quot;&#10;                        android:textSize=&quot;32sp&quot;&#10;                        android:textColor=&quot;@android:color/white&quot;&#10;                        android:fontFamily=&quot;sans-serif-medium&quot;&#10;                        android:gravity=&quot;center&quot;&#10;                        android:layout_marginBottom=&quot;20dp&quot;/&gt;&#10;&#10;                    &lt;TextView&#10;                        android:layout_width=&quot;wrap_content&quot;&#10;                        android:layout_height=&quot;wrap_content&quot;&#10;                        android:text=&quot;Verify with SMS code&quot;&#10;                        android:textSize=&quot;22sp&quot;&#10;                        android:textColor=&quot;#B3FFFFFF&quot;&#10;                        android:fontFamily=&quot;sans-serif-light&quot;&#10;                        android:gravity=&quot;center&quot;/&gt;&#10;&#10;                &lt;/LinearLayout&gt;&#10;&#10;            &lt;/LinearLayout&gt;&#10;&#10;        &lt;/LinearLayout&gt;&#10;&#10;        &lt;!-- Footer Instruction --&gt;&#10;        &lt;LinearLayout&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:orientation=&quot;vertical&quot;&#10;            android:gravity=&quot;center&quot;&#10;            android:layout_marginTop=&quot;40dp&quot;&gt;&#10;&#10;            &lt;TextView&#10;                android:layout_width=&quot;wrap_content&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:text=&quot;Touch your preferred option to continue&quot;&#10;                android:textSize=&quot;28sp&quot;&#10;                android:textColor=&quot;#80FFFFFF&quot;&#10;                android:fontFamily=&quot;sans-serif-light&quot;&#10;                android:gravity=&quot;center&quot;/&gt;&#10;&#10;        &lt;/LinearLayout&gt;&#10;&#10;    &lt;/LinearLayout&gt;&#10;&#10;&lt;/FrameLayout&gt;&#10;" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;FrameLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;&#10;    android:layout_width=&quot;match_parent&quot;&#10;    android:layout_height=&quot;match_parent&quot;&#10;    android:background=&quot;@drawable/gradient_background_main&quot;&gt;&#10;&#10;    &lt;LinearLayout&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;match_parent&quot;&#10;        android:orientation=&quot;vertical&quot;&#10;        android:padding=&quot;80dp&quot;&#10;        android:gravity=&quot;center&quot;&gt;&#10;&#10;        &lt;!-- Header with Back Button and Centered Logo/Wordmark --&gt;&#10;        &lt;LinearLayout&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;140dp&quot;&#10;            android:gravity=&quot;center_vertical&quot;&#10;            android:layout_marginBottom=&quot;80dp&quot;&gt;&#10;&#10;            &lt;!-- Back Button - positioned absolutely to not affect centering --&gt;&#10;            &lt;FrameLayout&#10;                android:layout_width=&quot;140dp&quot;&#10;                android:layout_height=&quot;match_parent&quot;&#10;                android:gravity=&quot;center_vertical&quot;&gt;&#10;&#10;                &lt;ImageButton&#10;                    android:id=&quot;@+id/backButton&quot;&#10;                    android:layout_width=&quot;120dp&quot;&#10;                    android:layout_height=&quot;120dp&quot;&#10;                    android:background=&quot;?android:attr/selectableItemBackgroundBorderless&quot;&#10;                    android:contentDescription=&quot;@string/back_button&quot;&#10;                    android:src=&quot;@drawable/ic_arrow_back&quot;&#10;                    android:alpha=&quot;0.9&quot;&#10;                    android:padding=&quot;20dp&quot;&#10;                    android:scaleType=&quot;fitCenter&quot;&#10;                    app:tint=&quot;@android:color/white&quot; /&gt;&#10;&#10;            &lt;/FrameLayout&gt;&#10;&#10;            &lt;!-- Centered Logo and Wordmark - this will be truly centered now --&gt;&#10;            &lt;LinearLayout&#10;                android:layout_width=&quot;0dp&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:layout_weight=&quot;1&quot;&#10;                android:gravity=&quot;center&quot;&#10;                android:orientation=&quot;horizontal&quot;&gt;&#10;&#10;                &lt;ImageView&#10;                    android:layout_width=&quot;140dp&quot;&#10;                    android:layout_height=&quot;140dp&quot;&#10;                    android:layout_marginEnd=&quot;30dp&quot;&#10;                    android:src=&quot;@drawable/logo&quot;&#10;                    android:contentDescription=&quot;@string/waterfountain_logo&quot;&#10;                    android:scaleType=&quot;fitCenter&quot; /&gt;&#10;&#10;                &lt;ImageView&#10;                    android:layout_width=&quot;400dp&quot;&#10;                    android:layout_height=&quot;80dp&quot;&#10;                    android:src=&quot;@drawable/white_word_mark&quot;&#10;                    android:contentDescription=&quot;@string/waterfountain_wordmark&quot;&#10;                    android:scaleType=&quot;fitCenter&quot;&#10;                    android:adjustViewBounds=&quot;true&quot;/&gt;&#10;&#10;            &lt;/LinearLayout&gt;&#10;&#10;            &lt;!-- Empty space to balance the back button --&gt;&#10;            &lt;View&#10;                android:layout_width=&quot;140dp&quot;&#10;                android:layout_height=&quot;match_parent&quot; /&gt;&#10;&#10;        &lt;/LinearLayout&gt;&#10;&#10;        &lt;!-- Main Content Area --&gt;&#10;        &lt;LinearLayout&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;0dp&quot;&#10;            android:layout_weight=&quot;1&quot;&#10;            android:orientation=&quot;vertical&quot;&#10;            android:gravity=&quot;center&quot;&gt;&#10;&#10;            &lt;!-- Title --&gt;&#10;            &lt;TextView&#10;                android:id=&quot;@+id/titleText&quot;&#10;                android:layout_width=&quot;wrap_content&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:text=&quot;Choose Your\nVerification Method&quot;&#10;                android:textSize=&quot;72sp&quot;&#10;                android:textColor=&quot;@android:color/white&quot;&#10;                android:fontFamily=&quot;sans-serif-medium&quot;&#10;                android:gravity=&quot;center&quot;&#10;                android:lineSpacingExtra=&quot;8dp&quot;&#10;                android:layout_marginBottom=&quot;60dp&quot;/&gt;&#10;&#10;            &lt;!-- Subtitle --&gt;&#10;            &lt;TextView&#10;                android:id=&quot;@+id/subtitleText&quot;&#10;                android:layout_width=&quot;wrap_content&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:text=&quot;Both methods are free and secure&quot;&#10;                android:textSize=&quot;48sp&quot;&#10;                android:textColor=&quot;#B3FFFFFF&quot;&#10;                android:fontFamily=&quot;sans-serif-light&quot;&#10;                android:gravity=&quot;center&quot;&#10;                android:layout_marginBottom=&quot;120dp&quot;/&gt;&#10;&#10;            &lt;!-- Option Cards --&gt;&#10;            &lt;LinearLayout&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:orientation=&quot;horizontal&quot;&#10;                android:gravity=&quot;center&quot;&#10;                android:layout_marginHorizontal=&quot;40dp&quot;&gt;&#10;&#10;                &lt;!-- SMS Option - Active (left) --&gt;&#10;                &lt;LinearLayout&#10;                    android:id=&quot;@+id/smsCard&quot;&#10;                    android:layout_width=&quot;0dp&quot;&#10;                    android:layout_height=&quot;580dp&quot;&#10;                    android:layout_weight=&quot;1&quot;&#10;                    android:orientation=&quot;vertical&quot;&#10;                    android:gravity=&quot;center&quot;&#10;                    android:background=&quot;@drawable/card_gradient_background&quot;&#10;                    android:layout_marginEnd=&quot;20dp&quot;&#10;                    android:padding=&quot;40dp&quot;&#10;                    android:clickable=&quot;true&quot;&#10;                    android:focusable=&quot;true&quot;&gt;&#10;&#10;                    &lt;ImageView&#10;                        android:layout_width=&quot;140dp&quot;&#10;                        android:layout_height=&quot;140dp&quot;&#10;                        android:src=&quot;@drawable/ic_phone_elegant&quot;&#10;                        app:tint=&quot;#2196F3&quot;&#10;                        android:contentDescription=&quot;Phone icon&quot;&#10;                        android:layout_marginBottom=&quot;30dp&quot;/&gt;&#10;&#10;                    &lt;TextView&#10;                        android:layout_width=&quot;wrap_content&quot;&#10;                        android:layout_height=&quot;wrap_content&quot;&#10;                        android:text=&quot;Phone Number&quot;&#10;                        android:textSize=&quot;36sp&quot;&#10;                        android:textColor=&quot;#333333&quot;&#10;                        android:fontFamily=&quot;sans-serif-black&quot;&#10;                        android:gravity=&quot;center&quot;&#10;                        android:layout_marginBottom=&quot;12dp&quot;/&gt;&#10;&#10;                    &lt;TextView&#10;                        android:layout_width=&quot;wrap_content&quot;&#10;                        android:layout_height=&quot;wrap_content&quot;&#10;                        android:text=&quot;No app needed&quot;&#10;                        android:textSize=&quot;24sp&quot;&#10;                        android:textColor=&quot;#666666&quot;&#10;                        android:fontFamily=&quot;sans-serif-medium&quot;&#10;                        android:gravity=&quot;center&quot;&#10;                        android:layout_marginBottom=&quot;12dp&quot;/&gt;&#10;&#10;                    &lt;TextView&#10;                        android:layout_width=&quot;wrap_content&quot;&#10;                        android:layout_height=&quot;wrap_content&quot;&#10;                        android:text=&quot;• Works offline\n• Privacy focused\n• ~45 seconds&quot;&#10;                        android:textSize=&quot;20sp&quot;&#10;                        android:textColor=&quot;#666666&quot;&#10;                        android:fontFamily=&quot;sans-serif-medium&quot;&#10;                        android:gravity=&quot;center&quot;&#10;                        android:lineSpacingExtra=&quot;4dp&quot;/&gt;&#10;&#10;                &lt;/LinearLayout&gt;&#10;&#10;                &lt;!-- PIN Code Option - Disabled/Coming Soon (center) --&gt;&#10;                &lt;FrameLayout&#10;                    android:id=&quot;@+id/pinCodeCard&quot;&#10;                    android:layout_width=&quot;0dp&quot;&#10;                    android:layout_height=&quot;580dp&quot;&#10;                    android:layout_weight=&quot;1&quot;&#10;                    android:layout_marginHorizontal=&quot;20dp&quot;&#10;                    android:background=&quot;@drawable/card_gradient_background&quot;&#10;                    android:clickable=&quot;false&quot;&#10;                    android:focusable=&quot;false&quot;&#10;                    android:alpha=&quot;0.6&quot;&gt;&#10;&#10;                    &lt;!-- Base card content --&gt;&#10;                    &lt;LinearLayout&#10;                        android:layout_width=&quot;match_parent&quot;&#10;                        android:layout_height=&quot;match_parent&quot;&#10;                        android:orientation=&quot;vertical&quot;&#10;                        android:gravity=&quot;center&quot;&#10;                        android:padding=&quot;40dp&quot;&gt;&#10;&#10;                        &lt;ImageView&#10;                            android:layout_width=&quot;140dp&quot;&#10;                            android:layout_height=&quot;140dp&quot;&#10;                            android:src=&quot;@drawable/ic_pin_code&quot;&#10;                            app:tint=&quot;#2196F3&quot;&#10;                            android:contentDescription=&quot;PIN Code icon&quot;&#10;                            android:layout_marginBottom=&quot;30dp&quot;&#10;                            android:alpha=&quot;0.5&quot;/&gt;&#10;&#10;                        &lt;TextView&#10;                            android:layout_width=&quot;wrap_content&quot;&#10;                            android:layout_height=&quot;wrap_content&quot;&#10;                            android:text=&quot;PIN Code&quot;&#10;                            android:textSize=&quot;36sp&quot;&#10;                            android:textColor=&quot;#333333&quot;&#10;                            android:fontFamily=&quot;sans-serif-black&quot;&#10;                            android:gravity=&quot;center&quot;&#10;                            android:layout_marginBottom=&quot;12dp&quot;&#10;                            android:alpha=&quot;0.5&quot;/&gt;&#10;&#10;                        &lt;TextView&#10;                            android:layout_width=&quot;wrap_content&quot;&#10;                            android:layout_height=&quot;wrap_content&quot;&#10;                            android:text=&quot;From mobile app&quot;&#10;                            android:textSize=&quot;24sp&quot;&#10;                            android:textColor=&quot;#666666&quot;&#10;                            android:fontFamily=&quot;sans-serif-medium&quot;&#10;                            android:gravity=&quot;center&quot;&#10;                            android:layout_marginBottom=&quot;12dp&quot;&#10;                            android:alpha=&quot;0.5&quot;/&gt;&#10;&#10;                        &lt;TextView&#10;                            android:layout_width=&quot;wrap_content&quot;&#10;                            android:layout_height=&quot;wrap_content&quot;&#10;                            android:text=&quot;• Account required\n• Most secure\n• ~30 seconds&quot;&#10;                            android:textSize=&quot;20sp&quot;&#10;                            android:textColor=&quot;#666666&quot;&#10;                            android:fontFamily=&quot;sans-serif-medium&quot;&#10;                            android:gravity=&quot;center&quot;&#10;                            android:lineSpacingExtra=&quot;4dp&quot;&#10;                            android:alpha=&quot;0.5&quot;/&gt;&#10;&#10;                    &lt;/LinearLayout&gt;&#10;&#10;                    &lt;!-- Rounded overlay with proper corners --&gt;&#10;                    &lt;View&#10;                        android:layout_width=&quot;match_parent&quot;&#10;                        android:layout_height=&quot;match_parent&quot;&#10;                        android:background=&quot;@drawable/overlay_rounded_background&quot; /&gt;&#10;&#10;                    &lt;LinearLayout&#10;                        android:layout_width=&quot;match_parent&quot;&#10;                        android:layout_height=&quot;match_parent&quot;&#10;                        android:gravity=&quot;center&quot;&#10;                        android:orientation=&quot;vertical&quot;&gt;&#10;&#10;                        &lt;TextView&#10;                            android:layout_width=&quot;wrap_content&quot;&#10;                            android:layout_height=&quot;wrap_content&quot;&#10;                            android:text=&quot;COMING SOON&quot;&#10;                            android:textSize=&quot;32sp&quot;&#10;                            android:textColor=&quot;@android:color/white&quot;&#10;                            android:fontFamily=&quot;sans-serif-black&quot;&#10;                            android:gravity=&quot;center&quot;&#10;                            android:background=&quot;@drawable/coming_soon_rounded_background&quot;&#10;                            android:paddingHorizontal=&quot;32dp&quot;&#10;                            android:paddingVertical=&quot;16dp&quot;&#10;                            android:textStyle=&quot;bold&quot;&#10;                            android:letterSpacing=&quot;0.1&quot;/&gt;&#10;&#10;                    &lt;/LinearLayout&gt;&#10;&#10;                &lt;/FrameLayout&gt;&#10;&#10;                &lt;!-- QR Code Option - Disabled/Coming Soon (right) --&gt;&#10;                &lt;FrameLayout&#10;                    android:id=&quot;@+id/qrCodeCard&quot;&#10;                    android:layout_width=&quot;0dp&quot;&#10;                    android:layout_height=&quot;580dp&quot;&#10;                    android:layout_weight=&quot;1&quot;&#10;                    android:layout_marginStart=&quot;20dp&quot;&#10;                    android:background=&quot;@drawable/card_gradient_background&quot;&#10;                    android:clickable=&quot;false&quot;&#10;                    android:focusable=&quot;false&quot;&#10;                    android:alpha=&quot;0.6&quot;&gt;&#10;&#10;                    &lt;!-- Base card content --&gt;&#10;                    &lt;LinearLayout&#10;                        android:layout_width=&quot;match_parent&quot;&#10;                        android:layout_height=&quot;match_parent&quot;&#10;                        android:orientation=&quot;vertical&quot;&#10;                        android:gravity=&quot;center&quot;&#10;                        android:padding=&quot;40dp&quot;&gt;&#10;&#10;                        &lt;ImageView&#10;                            android:layout_width=&quot;140dp&quot;&#10;                            android:layout_height=&quot;140dp&quot;&#10;                            android:src=&quot;@drawable/ic_qr_code&quot;&#10;                            app:tint=&quot;#2196F3&quot;&#10;                            android:contentDescription=&quot;QR Code icon&quot;&#10;                            android:layout_marginBottom=&quot;30dp&quot;&#10;                            android:alpha=&quot;0.5&quot;/&gt;&#10;&#10;                        &lt;TextView&#10;                            android:layout_width=&quot;wrap_content&quot;&#10;                            android:layout_height=&quot;wrap_content&quot;&#10;                            android:text=&quot;Scan QR Code&quot;&#10;                            android:textSize=&quot;36sp&quot;&#10;                            android:textColor=&quot;#333333&quot;&#10;                            android:fontFamily=&quot;sans-serif-black&quot;&#10;                            android:gravity=&quot;center&quot;&#10;                            android:layout_marginBottom=&quot;12dp&quot;&#10;                            android:alpha=&quot;0.5&quot;/&gt;&#10;&#10;                        &lt;TextView&#10;                            android:layout_width=&quot;wrap_content&quot;&#10;                            android:layout_height=&quot;wrap_content&quot;&#10;                            android:text=&quot;Instant • No typing&quot;&#10;                            android:textSize=&quot;24sp&quot;&#10;                            android:textColor=&quot;#666666&quot;&#10;                            android:fontFamily=&quot;sans-serif-medium&quot;&#10;                            android:gravity=&quot;center&quot;&#10;                            android:layout_marginBottom=&quot;12dp&quot;&#10;                            android:alpha=&quot;0.5&quot;/&gt;&#10;&#10;                        &lt;TextView&#10;                            android:layout_width=&quot;wrap_content&quot;&#10;                            android:layout_height=&quot;wrap_content&quot;&#10;                            android:text=&quot;• Works everywhere\n• No account needed\n• ~15 seconds&quot;&#10;                            android:textSize=&quot;20sp&quot;&#10;                            android:textColor=&quot;#666666&quot;&#10;                            android:fontFamily=&quot;sans-serif-medium&quot;&#10;                            android:gravity=&quot;center&quot;&#10;                            android:lineSpacingExtra=&quot;4dp&quot;&#10;                            android:alpha=&quot;0.5&quot;/&gt;&#10;&#10;                    &lt;/LinearLayout&gt;&#10;&#10;                    &lt;!-- Rounded overlay with proper corners --&gt;&#10;                    &lt;View&#10;                        android:layout_width=&quot;match_parent&quot;&#10;                        android:layout_height=&quot;match_parent&quot;&#10;                        android:background=&quot;@drawable/overlay_rounded_background&quot; /&gt;&#10;&#10;                    &lt;LinearLayout&#10;                        android:layout_width=&quot;match_parent&quot;&#10;                        android:layout_height=&quot;match_parent&quot;&#10;                        android:gravity=&quot;center&quot;&#10;                        android:orientation=&quot;vertical&quot;&gt;&#10;&#10;                        &lt;TextView&#10;                            android:layout_width=&quot;wrap_content&quot;&#10;                            android:layout_height=&quot;wrap_content&quot;&#10;                            android:text=&quot;COMING SOON&quot;&#10;                            android:textSize=&quot;32sp&quot;&#10;                            android:textColor=&quot;@android:color/white&quot;&#10;                            android:fontFamily=&quot;sans-serif-black&quot;&#10;                            android:gravity=&quot;center&quot;&#10;                            android:background=&quot;@drawable/coming_soon_rounded_background&quot;&#10;                            android:paddingHorizontal=&quot;32dp&quot;&#10;                            android:paddingVertical=&quot;16dp&quot;&#10;                            android:textStyle=&quot;bold&quot;&#10;                            android:letterSpacing=&quot;0.1&quot;/&gt;&#10;&#10;                    &lt;/LinearLayout&gt;&#10;&#10;                &lt;/FrameLayout&gt;&#10;&#10;            &lt;/LinearLayout&gt;&#10;&#10;        &lt;/LinearLayout&gt;&#10;&#10;        &lt;!-- Footer Instruction --&gt;&#10;        &lt;!-- Bottom Info Section with Question Mark --&gt;&#10;        &lt;LinearLayout&#10;            android:layout_width=&quot;wrap_content&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:layout_gravity=&quot;bottom|center_horizontal&quot;&#10;            android:layout_marginTop=&quot;40dp&quot;&#10;            android:orientation=&quot;horizontal&quot;&#10;            android:gravity=&quot;center_vertical&quot;&#10;            android:padding=&quot;20dp&quot;&gt;&#10;&#10;            &lt;!-- Question Mark Icon in Circle with extra space to prevent clipping --&gt;&#10;            &lt;FrameLayout&#10;                android:id=&quot;@+id/questionMarkButton&quot;&#10;                android:layout_width=&quot;120dp&quot;&#10;                android:layout_height=&quot;120dp&quot;&#10;                android:layout_marginEnd=&quot;20dp&quot;&#10;                android:clickable=&quot;true&quot;&#10;                android:focusable=&quot;true&quot;&#10;                android:elevation=&quot;6dp&quot;&gt;&#10;&#10;                &lt;!-- Circular background centered within the larger frame --&gt;&#10;                &lt;View&#10;                    android:layout_width=&quot;80dp&quot;&#10;                    android:layout_height=&quot;80dp&quot;&#10;                    android:layout_gravity=&quot;center&quot;&#10;                    android:background=&quot;@drawable/circle_background&quot;/&gt;&#10;&#10;                &lt;TextView&#10;                    android:id=&quot;@+id/questionMarkIcon&quot;&#10;                    android:layout_width=&quot;wrap_content&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:layout_gravity=&quot;center&quot;&#10;                    android:text=&quot;?&quot;&#10;                    android:textSize=&quot;44sp&quot;&#10;                    android:textColor=&quot;@android:color/white&quot;&#10;                    android:fontFamily=&quot;sans-serif-medium&quot;/&gt;&#10;&#10;            &lt;/FrameLayout&gt;&#10;&#10;            &lt;!-- &quot;Powered by local businesses&quot; text --&gt;&#10;            &lt;TextView&#10;                android:layout_width=&quot;wrap_content&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:text=&quot;Powered by local businesses&quot;&#10;                android:textSize=&quot;44sp&quot;&#10;                android:textColor=&quot;#B3FFFFFF&quot;&#10;                android:fontFamily=&quot;sans-serif-light&quot;/&gt;&#10;&#10;        &lt;/LinearLayout&gt;&#10;&#10;    &lt;/LinearLayout&gt;&#10;&#10;    &lt;!-- Modal Overlay (initially hidden) --&gt;&#10;    &lt;FrameLayout&#10;        android:id=&quot;@+id/modalOverlay&quot;&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;match_parent&quot;&#10;        android:background=&quot;#80000000&quot;&#10;        android:visibility=&quot;gone&quot;&#10;        android:clickable=&quot;true&quot;&gt;&#10;&#10;        &lt;!-- Modal Content --&gt;&#10;        &lt;LinearLayout&#10;            android:id=&quot;@+id/modalContent&quot;&#10;            android:layout_width=&quot;800dp&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:layout_gravity=&quot;center&quot;&#10;            android:background=&quot;@drawable/modal_background&quot;&#10;            android:orientation=&quot;vertical&quot;&#10;            android:padding=&quot;60dp&quot;&#10;            android:gravity=&quot;center&quot;&gt;&#10;&#10;            &lt;!-- Modal Title --&gt;&#10;            &lt;TextView&#10;                android:layout_width=&quot;wrap_content&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:text=&quot;Why is this free?&quot;&#10;                android:textSize=&quot;42sp&quot;&#10;                android:textColor=&quot;@android:color/white&quot;&#10;                android:fontFamily=&quot;sans-serif-medium&quot;&#10;                android:gravity=&quot;center&quot;&#10;                android:layout_marginBottom=&quot;30dp&quot;/&gt;&#10;&#10;            &lt;!-- Modal Message --&gt;&#10;            &lt;TextView&#10;                android:layout_width=&quot;wrap_content&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:text=&quot;Our spring water is completely free. Nature doesn't charge, so neither do we. Instead, we partner with local businesses who cover the cost to keep you hydrated.\n\nGet one every single day with your phone number&quot;&#10;                android:textSize=&quot;32sp&quot;&#10;                android:textColor=&quot;#E0FFFFFF&quot;&#10;                android:fontFamily=&quot;sans-serif-light&quot;&#10;                android:gravity=&quot;center&quot;&#10;                android:lineSpacingExtra=&quot;8dp&quot;&#10;                android:layout_marginBottom=&quot;40dp&quot;/&gt;&#10;&#10;            &lt;!-- Close Button --&gt;&#10;            &lt;TextView&#10;                android:id=&quot;@+id/closeModalButton&quot;&#10;                android:layout_width=&quot;wrap_content&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:text=&quot;Got it!&quot;&#10;                android:textSize=&quot;36sp&quot;&#10;                android:textColor=&quot;@android:color/white&quot;&#10;                android:fontFamily=&quot;sans-serif-medium&quot;&#10;                android:background=&quot;@drawable/button_background&quot;&#10;                android:paddingHorizontal=&quot;40dp&quot;&#10;                android:paddingVertical=&quot;16dp&quot;&#10;                android:clickable=&quot;true&quot;&#10;                android:focusable=&quot;true&quot;&#10;                android:gravity=&quot;center&quot;/&gt;&#10;&#10;        &lt;/LinearLayout&gt;&#10;&#10;    &lt;/FrameLayout&gt;&#10;&#10;&lt;/FrameLayout&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>